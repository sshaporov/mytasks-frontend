{"version":3,"sources":["components/common/editableItem/EditableItem.module.css","components/common/addItem/AddItem.module.css","components/cardTasks/task/Task.module.css","bll/user-reducer.ts","components/common/editableItem/EditableItem.tsx","components/cardTasks/task/Task.tsx","components/cardTasks/cardHeader/CardHeader.tsx","components/cardTasks/cardProgressBar/CardProgressBar.tsx","components/common/addItem/AddItem.tsx","components/cardTasks/filterTasks/FilterTasks.tsx","dal/instance.ts","dal/cards-api.ts","dal/auth-api.ts","bll/request-reducer.ts","bll/auth-reducer.ts","bll/cards-reducer.ts","bll/tasks-reducer.ts","dal/tasks-api.ts","bll/registration-reducer.ts","components/cardTasks/CardTasks.tsx","components/MyTasks.tsx","bll/search-reducer.ts","components/login/LoginForm.tsx","components/registration/RegistrationForm.tsx","components/common/page404/Page404.tsx","components/headerContent/HeaderContent.tsx","img/tasks.png","components/profile/Profile.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx"],"names":["module","exports","ACTIONS_USER_TYPE","EditableItem","React","memo","type","value","changeValue","editMode","setEditMode","useState","title","setTitle","updateItem","onChange","e","currentTarget","onBlur","autoFocus","className","s","taskInput","cardInput","onKeyPress","charCode","onDoubleClick","cardText","undefined","Task","id","isChecked","changeTaskTitle","changeTaskStatus","removeTask","setEditModeHandler","useCallback","onChangeTaskTitleHandler","newTitle","changeTaskStatusHandler","onClickRemoveDropdown","menu","onClick","Item","icon","CheckOutlined","EditOutlined","Divider","danger","DeleteOutlined","cardWrapper","checked","style","marginLeft","marginRight","overlay","trigger","EllipsisOutlined","CardHeader","cardTitle","taskCount","removeCard","changeCardTitle","onClickEditDropdown","count","offset","rotate","shape","CardProgressBar","progress","percent","showInfo","AddItem","addItem","isAdding","setIsAdding","itemTitle","setItemTitle","addTaskItem","disabled","placeholder","PlusCircleOutlined","block","FilterTasks","changeFilter","filter","onAllBtnClickHandler","onActiveBtnClickHandler","onDoneBtnClickHandler","styles","flex","backgroundColor","instance","axios","create","baseURL","cardsAPI","searchCardTitle","get","headers","Authorization","localStorage","getItem","params","search","then","res","data","post","cardId","newCardTitle","put","delete","authAPI","ACTIONS_REQUEST_TYPE","initialState","_id","name","email","setUserAC","user","SET_USER","payload","ACTIONS_AUTH_TYPE","status","error","setErrorAC","SET_ERROR","setStatusAC","SET_STATUS","ACTIONS_CARDS_TYPE","isAuth","isInitialized","setIsAuthAC","SET_IS_AUTH","setIsInitializedAC","SET_IS_INITIALIZED","ACTIONS_TASKS_TYPE","getCardsTC","dispatch","getState","cards","SET_CARDS","catch","err","response","message","addCardTC","card","item","ADD_CARD","changeCardTitleTC","CHANGE_CARD_TITLE","changeCardTitleAC","removeCardTC","REMOVE_CARD","removeCardAC","tasksAPI","taskId","taskIsChecked","taskTitle","ACTIONS_REGISTRATION_TYPE","getTasksTC","tasks","SET_TASKS","setTasksAC","addTaskTC","task","ADD_TASK","addTaskAC","changeTaskStatusTC","CHANGE_TASK_STATUS","changeTaskStatusAC","changeTaskTitleTC","CHANGE_TASK_TITLE","changeTaskTitleAC","removeTaskTC","REMOVE_TASK","removeTaskAC","console","log","CardTasks","addTask","useDispatch","useEffect","countTaskProgress","useMemo","doneCount","reduce","acc","Number","Math","ceil","length","changeFilterHandler","filterValue","removeTaskHandler","addTaskHandler","changeTaskTitleHandler","removeCardHandler","changeCardTitleHandler","tasksForCard","width","margin","borderRadius","boxShadow","map","MyTasks","useSelector","state","auth","addCard","CHANGE_CARD_FILTER","changeCardFilterAC","height","border","borderColor","opacity","borderWidth","to","ACTIONS_SEARCH_TYPE","isRegister","setIsRegisterAC","SET_IS_REGISTER","LoginForm","initialValues","remember","onFinish","values","setItem","token","rules","required","prefix","MailOutlined","LockOutlined","autoComplete","htmlType","layout","labelCol","span","wrapperCol","tailLayout","RegistrationForm","registration","label","min","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","resolve","Page404","subTitle","extra","Search","Input","HeaderContent","logout","userName","userEmail","searchInput","setSearchInput","onSearch","SET_SEARCH_CARD_TITLE","ProfileOutlined","LogoutOutlined","enterButton","UserOutlined","href","TabPane","Tabs","Profile","defaultActiveKey","centered","tab","warn","Header","Layout","Content","App","spinStyles","position","top","textAlign","zIndex","requestStatus","request","removeItem","LOGOUT","src","taskLogo","alt","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","copyState","forEach","card_id","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,SAAW,+BAA+B,UAAY,gCAAgC,UAAY,kC,oBCApHD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,UAAY,6B,oBCArED,EAAOC,QAAU,CAAC,YAAc,4B,kPCGpBC,E,qHCQCC,EAAgDC,IAAMC,MAAK,YAQlE,IANFC,EAMC,EANDA,KACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,YAEC,EAGqBC,mBAAiBJ,GAHtC,mBAGEK,EAHF,KAGSC,EAHT,KASGC,EAAa,WACjBN,EAAYI,GACZF,GAAY,IAad,OAAOD,EACH,uBACEF,MAAOK,EACPG,SAPkB,SAACC,GACvBH,EAASG,EAAEC,cAAcV,QAOrBW,OAAQJ,EACRK,WAAW,EACXC,UAAoB,SAATd,EAAkBe,IAAEC,UAAYD,IAAEE,UAC7CC,WAjBe,SAACR,GACD,KAAfA,EAAES,UACJX,OAiBA,sBAAMY,cA5BgB,WACxBhB,GAAY,IA2B8BU,UAAoB,SAATd,EAAkBe,IAAEM,cAAWC,EAAlF,SAA8FhB,O,sDCtCvFiB,EAAgCzB,IAAMC,MAAK,YASlD,IAPFyB,EAOC,EAPDA,GACAlB,EAMC,EANDA,MACAmB,EAKC,EALDA,UACAC,EAIC,EAJDA,gBACAC,EAGC,EAHDA,iBACAC,EAEC,EAFDA,WAEC,EAQ6BvB,oBAAkB,GAR/C,mBAQIF,EARJ,KAQcC,EARd,KAUGyB,EAAqBC,uBAAY,SAAC7B,GACtCG,EAAYH,KACZ,IAEI8B,EAA2BD,uBAAY,SAACE,GAC5CN,EAAgBF,EAAIQ,KACpB,CAACN,EAAiBF,IAEdS,EAA0BH,uBAAY,WAC1CH,EAAiBH,GAAKC,KACtB,CAACE,EAAkBH,EAAIC,IAEnBS,EAAwBJ,uBAAY,WACxCF,EAAWJ,KACX,CAACI,EAAYJ,IAETW,EACJ,eAAC,IAAD,CAAMC,QAAS,aAAf,UACE,cAAC,IAAKC,KAAN,CAAmBC,KAAM,cAACC,EAAA,EAAD,IAAkBH,QAASH,EAApD,mBAAe,KAGf,cAAC,IAAKI,KAAN,CAAmBC,KAAM,cAACE,EAAA,EAAD,IAAiBJ,QAAS,kBAAMhC,GAAY,IAArE,iBAAe,KAGf,cAAC,IAAKqC,QAAN,IACA,cAAC,IAAKJ,KAAN,CAAmBK,QAAM,EAACJ,KAAM,cAACK,EAAA,EAAD,IAAmBP,QAASF,EAA5D,mBAAe,QAMnB,OAEE,cADA,CACA,OAAKpB,UAAWC,IAAE6B,YAAlB,UACE,gCACE,cAAC,IAAD,CAAUC,QAASpB,EAAWhB,SAAUwB,EAAyBa,MA1C5B,CACzCC,WAAY,GACZC,YAAa,MAyCT,cAACnD,EAAD,CACEI,MAAOK,EACPN,KAAM,OACNE,YAAa6B,EACb5B,SAAUA,EACVC,YAAayB,OAGjB,cAAC,IAAD,CAAUoB,QAASd,EAAMe,QAAS,CAAC,SAAnC,SACE,cAAC,IAAD,CAAQZ,KAAM,cAACa,EAAA,EAAD,IAAqBnD,KAAM,iB,SClEpCoD,G,OAA4CtD,IAAMC,MAAK,YAO9D,IALFsD,EAKC,EALDA,UACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,gBAEC,EAG6BnD,oBAAkB,GAH/C,mBAGIF,EAHJ,KAGcC,EAHd,KAKGyB,EAAqBC,uBAAY,SAAC7B,GACtCG,EAAYH,KACZ,IAEIiC,EAAwBJ,uBAAY,WACxCyB,MACA,CAACA,IAEGE,EAAsB3B,uBAAY,WACtC1B,GAAY,KACX,IAEG+B,EACJ,eAAC,IAAD,WACE,cAAC,IAAKE,KAAN,CAAmBC,KAAM,cAACE,EAAA,EAAD,IAAiBJ,QAASqB,EAAnD,iBAAe,KAGf,cAAC,IAAKhB,QAAN,IACA,cAAC,IAAKJ,KAAN,CAAmBK,QAAM,EAACJ,KAAM,cAACK,EAAA,EAAD,IAAoBP,QAASF,EAA7D,mBAAe,QAMnB,OACE,sBAAKpB,UAAU,qBAAf,UACI,cAAC,IAAD,CAAO4C,MAAOJ,EAAWK,OAAQ,CAAC,GAAI,GAAI7C,UAAU,aAApD,SACE,cAACjB,EAAD,CACEG,KAAK,OACLC,MAAOoD,EACPnD,YAAasD,EACbrD,SAAUA,EACVC,YAAayB,MAGnB,cAAC,IAAD,CAAUoB,QAASd,EAAMe,QAAS,CAAC,SAAnC,SACE,cAAC,IAAD,CAAQZ,KAAM,cAACa,EAAA,EAAD,CAAkBS,OAAQ,KAAO5D,KAAK,OAAO6D,MAAM,oB,SCtD5DC,EAAsDhE,IAAMC,MAAK,YAIxE,IAFFgE,EAEC,EAFDA,SAKF,OAAO,cAAC,IAAD,CAAUC,QAASD,EAAUE,UAAQ,O,6CCHjCC,EAAsCpE,IAAMC,MAAK,YAKxD,IAHFC,EAGC,EAHDA,KACAmE,EAEC,EAFDA,QAEC,EAG6B9D,oBAAkB,GAH/C,mBAGI+D,EAHJ,KAGcC,EAHd,OAI+BhE,mBAAiB,IAJhD,mBAIIiE,EAJJ,KAIeC,EAJf,KAUGC,EAAc,WACD,KAAdF,IACDH,EAAQG,GACRC,EAAa,KAEfF,GAAY,IAcd,OACE,8BACGD,EACG,sBAAKxD,OAAQ4D,EAAb,UACY,SAATxE,EACG,cAAC,IAAD,CAAUyE,UAAQ,EAAC3B,MAAO,CAACC,WAAY,GAAIC,YAAa,MACxD,KACJ,uBACElC,UAAoB,SAATd,EAAkBe,IAAEC,UAAYD,IAAEE,UAC7CyD,YAAsB,SAAT1E,EAAkB,iBAAmB,iBAClDS,SAjCc,SAACC,GACzB6D,EAAa7D,EAAEC,cAAcV,QAiCnBA,MAAOqE,EACPzD,WAAS,EACTK,WApBS,SAACR,GACD,KAAfA,EAAES,UACJqD,UAqBI,eAAC,IAAD,CACExE,KAAK,OACLsC,KAAM,cAACqC,EAAA,EAAD,IACNC,OAAK,EACLxC,QA/BY,WACpBiC,GAAY,IA0BN,iBAKMrE,UCxDH6E,G,OAA8C/E,IAAMC,MAAK,YAKhE,IAHF+E,EAGC,EAHDA,aACAC,EAEC,EAFDA,OAKIC,EAAuBlD,uBAAY,kBAAMgD,EAAa,SAAQ,CAACA,IAC/DG,EAA0BnD,uBAAY,kBAAMgD,EAAa,YAAW,CAACA,IACrEI,EAAwBpD,uBAAY,kBAAMgD,EAAa,UAAQ,CAACA,IAGhEK,EAAS,CAACC,KAAM,GAEtB,OACE,sBAAKtE,UAAU,oBAAf,UACI,cAAC,IAAD,CAAQsB,QAAS4C,EAAsBlC,MAAkB,QAAXiC,EAAmB,CAACK,KAAM,EAAGC,gBAAiB,WAAaF,EAAzG,iBACA,cAAC,IAAD,CAAQ/C,QAAS6C,EAAyBnC,MAAkB,WAAXiC,EAAsB,CAACK,KAAM,EAAGC,gBAAiB,WAAaF,EAA/G,oBACA,cAAC,IAAD,CAAQ/C,QAAS8C,EAAuBpC,MAAkB,SAAXiC,EAAoB,CAACK,KAAM,EAAGC,gBAAiB,WAAaF,EAA3G,yB,iCC3BKG,E,OAAWC,EAAMC,OAAO,CASnCC,QAAS,6CCTEC,EAAW,SACbC,GACP,OAAOL,EAASM,IAAT,SACL,CACEC,QAAS,CAACC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,WACxDC,OAAQ,CAACC,OAAQP,KAElBQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAPVX,EAAW,SASXrC,GACT,OAAOiC,EAASgB,KAAT,SAAgD,CAAChG,MAAO+C,GAC7D,CAACwC,QAAS,CAACC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAZVX,EAAW,SAcNa,EAAgBC,GAC9B,OAAOlB,EAASmB,IAAT,iBAA+CF,GAAU,CAAEjG,MAAOkG,GACvE,CAACX,QAAS,CAACC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAjBVX,EAAW,SAmBXa,GACT,OAAOjB,EAASoB,OAAT,iBAAkDH,GACvD,CAACV,QAAS,CAACC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCpBVM,EAAU,SACfN,GACJ,OAAOf,EAASgB,KAAT,cAAgDD,GAAMF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAFpEM,EAAU,SAIRN,GACX,OAAOf,EAASgB,KAAT,qBAA8DD,GAAMF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SALlFM,EAAU,WAQnB,OAAOrB,EAASM,IAAT,WACL,CAACC,QAAS,CAACC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,U,STVXzG,K,0BAAAA,M,KASZ,IUXYgH,EVWNC,EAA8B,CAClCC,IAAK,KACLC,KAAM,KACNC,MAAO,IAkBIC,EAAY,SAACC,GAAD,MACtB,CAAClH,KAAMJ,EAAkBuH,SAAUC,QAASF,K,SUjCnCN,K,gCAAAA,E,+BAAAA,M,KASZ,ICLYS,EDKNR,EAAiC,CACrCS,OAAQ,OACRC,MAAO,MAkBIC,GAAa,SAACD,GAAD,MACvB,CAAEvH,KAAM4G,EAAqBa,UAAWF,UAE9BG,GAAc,SAACJ,GAAD,MACxB,CAAEtH,KAAM4G,EAAqBe,WAAYL,Y,SC7BhCD,K,+BAAAA,E,6CAAAA,E,sBAAAA,M,KAUZ,ICXYO,GDWNf,GAA8B,CAClCgB,QAAQ,EACRC,eAAe,GAsBJC,GAAc,SAAC9H,GAAD,MACxB,CAACD,KAAMqH,EAAkBW,YAAa/H,UAE5BgI,GAAqB,SAAChI,GAAD,MAC/B,CAACD,KAAMqH,EAAkBa,mBAAoBjI,W,SCvCpC2H,K,0BAAAA,E,gCAAAA,E,4CAAAA,E,8CAAAA,E,6BAAAA,Q,KAUZ,ICTYO,GDSNtB,GAAqC,GA6D9BuB,GAAa,WACxB,OAAO,SAACC,EAAUC,GAChB,IAAM3C,EAAkB2C,IAAWpC,OAAOP,gBAC1C0C,EAASX,GAAY,YACrBhC,EAAkBC,GACfQ,MAAK,SAAAC,GAjCc,IAACmC,EAkCnBF,GAlCmBE,EAkCCnC,EAlC2B,CACrDpG,KAAM4H,GAAmBY,UACzBD,WAiCMF,EAASX,GAAY,iBAEtBe,OAAM,SAAAC,GACLL,EAASb,GAAWkB,EAAIC,SAAStC,KAAKuC,UACtCP,EAASX,GAAY,gBAIhBmB,GAAY,SAACxF,GACxB,OAAO,SAACgF,GACNA,EAASX,GAAY,YACrBhC,EAAoBrC,GACjB8C,MAAK,SAAAC,GAnDa,IAAC0C,EAoDlBT,GApDkBS,EAoDC1C,EAAI2C,KApDe,CAC5C/I,KAAM4H,GAAmBoB,SACzBF,UAmDMT,EAASX,GAAY,iBAEtBe,OAAM,SAAAC,GACLL,EAASb,GAAWkB,EAAIE,QAAUF,EAAIE,QAAU,yBAChDP,EAASX,GAAY,gBAIhBuB,GAAoB,SAAC1C,EAAgBC,GAChD,OAAO,SAAC6B,GACNA,EAASX,GAAY,YACrBhC,EAAyBa,EAAQC,GAC9BL,MAAK,WACJkC,EA1DyB,SAAC9B,EAAgBlD,GAAjB,MAAwC,CACvErD,KAAM4H,GAAmBsB,kBACzB3C,SACAlD,aAuDe8F,CAAkB5C,EAAQC,IACnC6B,EAASX,GAAY,iBAEtBe,OAAM,SAAAC,GACLL,EAASb,GAAWkB,EAAIE,QAAUF,EAAIE,QAAU,yBAChDP,EAASX,GAAY,gBAIhB0B,GAAe,SAAC7C,GAC3B,OAAO,SAAC8B,GACNA,EAASX,GAAY,YACrBhC,EAAoBa,GACjBJ,MAAK,WACJkC,EAnEoB,SAAC9B,GAAD,MAAqB,CAC/CvG,KAAM4H,GAAmByB,YACzB9C,UAiEe+C,CAAa/C,IACtB8B,EAASX,GAAY,iBAGtBe,OAAM,SAAAC,GACLL,EAASb,GAAWkB,EAAIE,QAAUF,EAAIE,QAAU,yBAChDP,EAASX,GAAY,gBEhIhB6B,GAAW,SACbhD,GACP,OAAOjB,EAASM,IAAT,iBAA6CW,EAA7C,UACL,CAACV,QAAS,CAACC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAJVkD,GAAW,SAMXlG,EAAmBkD,GAC5B,OAAOjB,EAASgB,KAAT,iBAAgDC,EAAhD,UAA+D,CAACjG,MAAO+C,GAC5E,CAACwC,QAAS,CAACC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SATVkD,GAAW,SAWLC,EAAgBC,EAAwBlD,GACvD,OAAOjB,EAASmB,IAAT,iBAA+CF,EAA/C,kBAA+DiD,GAAS,CAAC3G,QAAS4G,GACvF,CAAC5D,QAAS,CAACC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAdVkD,GAAW,SAgBNC,EAAgBE,EAAmBnD,GACjD,OAAOjB,EAASmB,IAAT,iBAA+CF,EAA/C,kBAA+DiD,GAAU,CAAClJ,MAAOoJ,GACtF,CAAC7D,QAAS,CAACC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAnBVkD,GAAW,SAqBXC,EAAgBjD,GACzB,OAAOjB,EAASoB,OAAT,iBAAkDH,EAAlD,kBAAkEiD,GACvE,CAAC3D,QAAS,CAACC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,aACxDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,U,SDpBX8B,K,8CAAAA,E,0BAAAA,E,4CAAAA,E,gCAAAA,E,6BAAAA,Q,KAWZ,IEZYwB,GFYN9C,GAA0B,GAkGnB+C,GAAa,SAACrD,GACzB,OAAO,SAAC8B,GACNA,EAASX,GAAY,YACrB6B,GAAkBhD,GACfJ,MAAK,SAAAC,GACJiC,EA3CkB,SAACwB,EAAwBtD,GAAzB,MAA6C,CACrEvG,KAAMmI,GAAmB2B,UACzBD,QACAtD,UAwCewD,CAAW3D,EAAKG,IACzB8B,EAASX,GAAY,iBAEtBe,OAAM,SAAAC,GACLL,EAASb,GAAWkB,EAAIE,QAAUF,EAAIE,QAAU,yBAChDP,EAASX,GAAY,gBAKhBsC,GAAY,SAACN,EAAmBnD,GAC3C,OAAO,SAAC8B,GACNA,EAASX,GAAY,YACrB6B,GAAoBG,EAAWnD,GAC5BJ,MAAK,SAAAC,GACJiC,EArDiB,SAAC4B,EAAgB1D,GAAjB,MAAqC,CAC5DvG,KAAMmI,GAAmB+B,SACzBD,OACA1D,UAkDe4D,CAAU/D,EAAI2C,KAAMxC,IAC7B8B,EAASX,GAAY,iBAEtBe,OAAM,SAAAC,GACLL,EAASb,GAAWkB,EAAIE,QAAUF,EAAIE,QAAU,yBAChDP,EAASX,GAAY,gBAMhB0C,GAAqB,SAACZ,EAAgBC,EAAwBlD,GACzE,OAAO,SAAC8B,GACNA,EAASX,GAAY,YACrB6B,GAA0BC,EAAQC,EAAelD,GAC9CJ,MAAK,SAAAC,GACJiC,EAhE0B,SAACmB,EAAgBC,EAAwBlD,GAAzC,MAA6D,CAC7FvG,KAAMmI,GAAmBkC,mBACzBb,SACAC,gBACAlD,UA4De+D,CAAmBd,EAAQC,EAAelD,IACnD8B,EAASX,GAAY,iBAEtBe,OAAM,SAAAC,GACLL,EAASb,GAAWkB,EAAIE,QAAUF,EAAIE,QAAU,yBAChDP,EAASX,GAAY,gBAKhB6C,GAAoB,SAACf,EAAgBE,EAAmBnD,GACnE,OAAO,SAAC8B,GACNA,EAASX,GAAY,YACrB6B,GAAyBC,EAAQE,EAAWnD,GACzCJ,MAAK,SAAAC,GACJiC,EAzEyB,SAACmB,EAAgBE,EAAmBnD,GAApC,MAAwD,CACvFvG,KAAMmI,GAAmBqC,kBACzBhB,SACAE,YACAnD,UAqEekE,CAAkBjB,EAAQE,EAAWnD,IAC9C8B,EAASX,GAAY,iBAEtBe,OAAM,SAAAC,GACLL,EAASb,GAAWkB,EAAIE,QAAUF,EAAIE,QAAU,yBAChDP,EAASX,GAAY,gBAKhBgD,GAAe,SAAClB,EAAgBjD,GAC3C,OAAO,SAAC8B,GACNA,EAASX,GAAY,YACrB6B,GAAoBC,EAAQjD,GACzBJ,MAAK,SAAAC,GACJiC,EAlFoB,SAACmB,EAAgBjD,GAAjB,MAAqC,CAC/DvG,KAAMmI,GAAmBwC,YACzBnB,SACAjD,UA+EeqE,CAAapB,EAAQjD,IAC9B8B,EAASX,GAAY,iBAEtBe,OAAM,SAAA/H,GACLmK,QAAQC,IAAI,sBAAuBpK,Q,SGjK9BqK,GAA0CjL,IAAMC,MAAK,YAY5D,IAVF+I,EAUC,EAVDA,KACAvF,EASC,EATDA,WACAC,EAQC,EARDA,gBACAqG,EAOC,EAPDA,MACAnI,EAMC,EANDA,gBACAC,EAKC,EALDA,iBACAC,EAIC,EAJDA,WACAoJ,EAGC,EAHDA,QACAlG,EAEC,EAFDA,aAYIuD,EAAW4C,eAEjBC,qBAAU,WACR7C,EAASuB,GAAWd,EAAKhC,QACzB,CAACuB,EAAUS,IAGb,IAAMqC,EAAoBC,mBAAQ,WAChC,IAAMC,EAAYxB,EAAMyB,QAAO,SAACC,EAAKtB,GAAN,OAAesB,EAAMC,OAAOvB,EAAKpH,WAAU,GAC1E,OAAO4I,KAAKC,KAAK,IAAM7B,EAAM8B,OAASN,KACtC,CAACxB,IAGG+B,EAAsB9J,uBAAY,SAAC+J,GACvC/G,EAAa+G,EAAa/C,EAAKhC,OAC9B,CAAChC,EAAcgE,IAEZgD,EAAoBhK,uBAAY,SAAC0H,GACrC5H,EAAW4H,EAAQV,EAAKhC,OACvB,CAAClF,EAAYkH,IAEV7G,EAA0BH,uBAAY,SAAC0H,EAAgBC,GAC3D9H,EAAiB6H,EAAQC,EAAeX,EAAKhC,OAC5C,CAACnF,EAAkBmH,IAEhBiD,EAAiBjK,uBAAY,SAAC4H,GAClCsB,EAAQtB,EAAWZ,EAAKhC,OACvB,CAACkE,EAASlC,IAEPkD,EAAyBlK,uBAAY,SAAC0H,EAAgBlJ,GAC1DoB,EAAgB8H,EAAQlJ,EAAOwI,EAAKhC,OACnC,CAACpF,EAAiBoH,IAEfmD,EAAoBnK,uBAAY,WACpCyB,EAAWuF,EAAKhC,OACf,CAACvD,EAAYuF,IAEVoD,EAAyBpK,uBAAY,SAAC0E,GAC1ChD,EAAgBsF,EAAKhC,IAAKN,KACzB,CAAChD,EAAiBsF,IAGjBqD,EAAetC,EAInB,MAHoB,SAAhBf,EAAK/D,SAAmBoH,EAAetC,EAAM9E,QAAO,SAAAkF,GAAI,OAAIA,EAAKpH,YACjD,WAAhBiG,EAAK/D,SAAqBoH,EAAetC,EAAM9E,QAAO,SAAAkF,GAAI,OAAKA,EAAKpH,YAGtE,8BACE,eAAC,IAAD,CAAMC,MAvDwB,CAChCsJ,MAAO,IACPC,OAAQ,GACRC,aAAc,EACdC,UAAW,6CAmDT,UACE,cAACnJ,EAAD,CACEC,UAAWyF,EAAKxI,MAChBgD,UAAWuG,EAAM8B,OACjBpI,WAAY0I,EACZzI,gBAAiB0I,IAEnB,cAACpI,EAAD,CAAiBC,SAAUoH,IAC3B,cAAC,IAAD,IACCgB,EAAaK,KAAI,SAAAvC,GAAI,OAAI,cAAC1I,EAAD,CAEEC,GAAIyI,EAAKnD,IACTxG,MAAO2J,EAAK3J,MACZmB,UAAWwI,EAAKpH,QAChBnB,gBAAiBsK,EACjBrK,iBAAkBM,EAClBL,WAAYkK,GANP7B,EAAKnD,QAStC,cAAC5C,EAAD,CAASC,QAAS4H,EAAgB/L,KAAM,SACxC,cAAC,IAAD,IACA,cAAC6E,EAAD,CAAaC,aAAc8G,EAAqB7G,OAAQ+D,EAAK/D,iBCzFxD0H,I,OAAU3M,IAAMC,MAAK,WAGhC,IAWMwI,EAAQmE,cAAgD,SAAAC,GAAK,OAAIA,EAAMpE,SACvEsB,EAAQ6C,cAAqC,SAAAC,GAAK,OAAIA,EAAM9C,SAC5DhC,EAAS6E,cAAmC,SAAAC,GAAK,OAAIA,EAAMC,KAAK/E,UAEhEQ,EAAW4C,eAEjBC,qBAAU,WACLrD,GACDQ,EAASD,QAEV,CAACC,EAAUR,IAEd,IAAMgF,EAAU/K,uBAAY,SAACuB,GAC3BgF,EAASQ,GAAUxF,MACnB,CAACgF,IAEG7E,EAAkB1B,uBAAY,SAACyE,EAAgBC,GACnD6B,EAASY,GAAkB1C,EAAQC,MAClC,CAAC6B,IAEE9E,EAAazB,uBAAY,SAACyE,GAC9B8B,EAASe,GAAa7C,MACrB,CAAC8B,IAEE2C,EAAUlJ,uBAAY,SAAC4H,EAAmBnD,GAC9C8B,EAAS2B,GAAUN,EAAWnD,MAC9B,CAAC8B,IAEG1G,EAAmBG,uBAAY,SAAC0H,EAAgBC,EAAwBlD,GAC5E8B,EAAS+B,GAAmBZ,EAAQC,EAAelD,MACnD,CAAC8B,IAEG3G,EAAkBI,uBAAY,SAAC0H,EAAgBE,EAAmBnD,GACtE8B,EAASkC,GAAkBf,EAAQE,EAAWnD,MAC9C,CAAC8B,IAEGzG,EAAaE,uBAAY,SAAC0H,EAAgBjD,GAC9C8B,EAASqC,GAAalB,EAAQjD,MAC9B,CAAC8B,IAEGvD,EAAehD,uBAAY,SAACiD,EAA8BwB,GAC9D8B,ELpB8B,SAACtD,EAA8BwB,GAA/B,MAAmD,CACnFvG,KAAM4H,GAAmBkF,mBACzBvG,SACAxB,UKiBWgI,CAAmBhI,EAAQwB,MACpC,CAAC8B,IAEH,OAAIR,EAKF,sBAAK/G,UAAU,kBAAf,UACGyH,EAAMiE,KAAI,SAAA1D,GACT,OAAO,cAACiC,GAAD,CAEEjC,KAAMA,EACNvF,WAAYA,EACZC,gBAAiBA,EACjBqG,MAAOA,EAAMf,EAAKhC,KAClBpF,gBAAiBA,EACjBC,iBAAkBA,EAClBC,WAAYA,EACZoJ,QAASA,EACTlG,aAAcA,GATTgE,EAAKhC,QAYrB,cAAC,IAAD,CAAMhE,MA3EgC,CACxCsJ,MAAO,IACPY,OAAQ,GACRX,OAAQ,GACRC,aAAc,EACdW,OAAQ,SACRC,YAAa,YACbC,QAAS,GACTC,YAAa,GAmEX,SACE,cAAClJ,EAAD,CAASC,QAAS0I,EAAS7M,KAAK,cApB7B,cAAC,IAAD,CAAUqN,GAAG,e,yDFhFZ1D,K,yCAAAA,Q,KAOZ,IGTY2D,GHSNzG,GAAsC,CAC1C0G,YAAY,GAeDC,GAAkB,SAACvN,GAAD,MAC5B,CAACD,KAAM2J,GAA0B8D,gBAAiBxN,UIbxCyN,GAAY5N,IAAMC,MAAK,WAGlC,IAAM8H,EAAS6E,cAAmC,SAAAC,GAAK,OAAIA,EAAMC,KAAK/E,UAChEQ,EAAW4C,eAOjB,OAAIpD,EACK,cAAC,IAAD,CAAUwF,GAAI,MAIrB,qBAAKvM,UAAU,oBAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,eAAC,KAAD,CACEiG,KAAK,QACL4G,cAAe,CAACC,UAAU,GAC1BC,SAfS,SAACC,GRkCG,IAACzH,EQjCpBgC,GRiCoBhC,EQjCHyH,ERkCZ,SAACzF,GACN1B,EAAcN,GACXF,MAAK,SAAAC,GACJL,aAAagI,QAAQ,QAAS3H,EAAI4H,OAClC3F,EAASN,IAAY,IACrBM,EAASpB,EAAUb,EAAIc,UAExBuB,OAAM,SAAAC,GACLL,EAASb,GAAWkB,EAAIC,SAAStC,KAAKuC,gBQzC1CP,EAASmF,IAAgB,KAUrB,UAKE,qBAAK1M,UAAU,kBAAf,oBAGA,cAAC,KAAKuB,KAAN,CACE0E,KAAK,QACLkH,MAAO,CACL,CACEC,UAAU,EACVtF,QAAS,4BAEX,CACE5I,KAAM,QACN4I,QAAS,gCATf,SAaE,cAAC,KAAD,CAAOuF,OAAQ,cAACC,GAAA,EAAD,CAActN,UAAU,wBAAyB4D,YAAY,YAG9E,cAAC,KAAKrC,KAAN,CACE0E,KAAK,WACLkH,MAAO,CACL,CACEC,UAAU,EACVtF,QAAS,gCALf,SASE,cAAC,KAAD,CACEuF,OAAQ,cAACE,GAAA,EAAD,CAAcvN,UAAU,wBAChCd,KAAK,WACL0E,YAAY,WACZ4J,aAAa,SAIjB,eAAC,KAAKjM,KAAN,WACE,cAAC,IAAD,CAAQrC,KAAK,UAAUuO,SAAS,SAASzN,UAAU,oBAAnD,oBADF,MAIK,cAAC,IAAD,CAASuM,GAAG,gBAAZ,wC,8BCtETmB,I,OAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,MAGJE,GAAa,CACjBD,WAAY,CACVhL,OAAQ,EACR+K,KAAM,KAUGG,GAAmB/O,IAAMC,MAAK,WAGzC,IAAMwN,EAAab,cAAmC,SAAAC,GAAK,OAAIA,EAAMmC,aAAavB,cAE5ElF,EAAW4C,eAEX4C,EAAW/L,uBAAY,SAACgM,GLDF,IAACzH,EKE3BgC,GLF2BhC,EKEHyH,ELDnB,SAACzF,GACN1B,EAAqBN,GAClBF,MAAK,WACJkC,EAASmF,IAAgB,OAE1B/E,OAAM,SAAAC,GACLL,EAASb,GAAWkB,EAAIC,SAAStC,KAAKuC,kBKJzC,CAACP,IAEJ,OAAIkF,EAEA,qBAAKzM,UAAU,2BAAf,SACE,sBAAKA,UAAU,0CAAf,yDAC8C,cAAC,IAAD,CAASuM,GAAI,SAAb,yBAOlD,qBAAKvM,UAAU,2BAAf,SACE,qBAAKA,UAAU,2BAAf,SACE,eAAC,KAAD,2BACM0N,IADN,IAEEzH,KAAK,WACLjG,UAAU,oBACV+M,SAAUA,EAJZ,UAME,qBAAK/M,UAAU,yBAAf,0BAGA,cAAC,KAAKuB,KAAN,CACE0E,KAAK,OACLgI,MAAM,OAFR,SAIE,cAAC,KAAD,MAGF,cAAC,KAAK1M,KAAN,CACE0E,KAAK,QACLgI,MAAM,QACNd,MAAO,CACL,CACEjO,KAAM,QACN4I,QAAS,kCAEX,CACEsF,UAAU,EACVtF,QAAS,8BAVf,SAcE,cAAC,KAAD,MAGF,cAAC,KAAKvG,KAAN,CACE0E,KAAK,WACLgI,MAAM,WACNd,MAAO,CACL,CACEC,UAAU,EACVtF,QAAS,+BAEX,CACEoG,IAAK,EACLpG,QAAS,4CAGbqG,aAAW,EAbb,SAeE,cAAC,KAAMC,SAAP,CAAgBZ,aAAa,SAG/B,cAAC,KAAKjM,KAAN,CACE0E,KAAK,UACLgI,MAAM,mBACNI,aAAc,CAAC,YACfF,aAAW,EACXhB,MAAO,CACL,CACEC,UAAU,EACVtF,QAAS,iCAEX,CACEoG,IAAK,EACLpG,QAAS,2CAGX,gBAAEwG,EAAF,EAAEA,cAAF,MAAsB,CACpBC,UADoB,SACVC,EAAGrP,GACX,OAAKA,GAASmP,EAAc,cAAgBnP,EAIrCsP,QAAQC,OAAO,oDAHbD,QAAQE,cAlBzB,SA0BE,cAAC,KAAMP,SAAP,CAAgBZ,aAAa,SAG/B,cAAC,KAAKjM,KAAN,2BAAeuM,IAAf,aACE,cAAC,IAAD,CAAQ5O,KAAK,UAAUuO,SAAS,SAAhC,oC,UCpICmB,GAAU5P,IAAMC,MAAK,WAChC,OACE,cAAC,KAAD,CACEuH,OAAO,MACPhH,MAAM,MACNqP,SAAS,8CACTC,MAAO,cAAC,IAAD,CAAQ5P,KAAK,UAAb,4B,kEHNDsN,K,sDAAAA,Q,KAOZ,IAAMzG,GAAgC,CACpClB,qBAAiBrE,GIAZuO,GAAUC,KAAVD,OAMME,GAA6CjQ,IAAMC,MAAK,YAI/D,IAFFiQ,EAEC,EAFDA,OAKIC,EAAWvD,cAAyC,SAAAC,GAAK,OAAIA,EAAMzF,KAAKH,QACxEmJ,EAAYxD,cAAkC,SAAAC,GAAK,OAAIA,EAAMzF,KAAKF,SAJrE,EAKmC3G,wBAA6BiB,GALhE,mBAKI6O,EALJ,KAKiBC,EALjB,KAMG/H,EAAW4C,eAMXoF,EAAWvO,uBAAY,WJJK,IAAC6D,EIKjC0C,GJLiC1C,EIKHwK,EJL4C,CAC5EnQ,KAAMsN,GAAoBgD,sBAC1B3K,qBIIE0C,EAASD,QACT,CAACC,EAAU8H,IAEPhO,EACJ,eAAC,IAAD,CAAMC,QAAS,aAAf,UAEE,cAAC,IAAKC,KAAN,CAAmBC,KAAM,cAACiO,GAAA,EAAD,IAAoBnO,QAAS,aAAtD,SAEE,cAAC,IAAD,CAASiL,GAAI,WAAb,sBAFa,KAIf,cAAC,IAAK5K,QAAN,IACA,cAAC,IAAKJ,KAAN,CAAmBK,QAAM,EAACJ,KAAM,cAACkO,GAAA,EAAD,IAAmBpO,QAAS4N,EAA5D,oBAAe,QAMnB,OACE,sBAAKlP,UAAU,wBAAf,UACE,cAAC+O,GAAD,CACEnL,YAAY,mBACZ2L,SAAUA,EACVpQ,MAAOkQ,EACPM,aAAW,EACX3P,UAAW,uBACXL,SA/BsB,SAACC,GAC3B0P,EAAe1P,EAAEC,cAAcV,UAgC7B,cAAC,IAAD,CAAUgD,QAASd,EAAMe,QAAS,CAAC,SAAUpC,UAAU,mBAAvD,SACE,sBAAKA,UAAU,mBAAf,UACE,cAAC,KAAD,CAAQwB,KAAM,cAACoO,GAAA,EAAD,MACd,mBAAG5P,UAAU,gBAAgB6P,KAAK,KAAlC,SAEKV,GACGC,eCpEH,OAA0B,kC,UCUjCU,I,OAAYC,KAAZD,SAEKE,GAAoBhR,IAAMC,MAAK,WAG1C,IAAMkQ,EAAWvD,cAAyC,SAAAC,GAAK,OAAIA,EAAMzF,KAAKH,QACxEC,EAAQ0F,cAAkC,SAAAC,GAAK,OAAIA,EAAMzF,KAAKF,SAGpE,OAFe0F,cAAmC,SAAAC,GAAK,OAAIA,EAAMC,KAAK/E,UAQlE,eAAC,KAAD,CAAMkJ,iBAAiB,IAAIC,UAAQ,EAAnC,UACE,cAACJ,GAAD,CAASK,IAAI,YAAb,SACE,qBAAKnQ,UAAU,mBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC4P,GAAA,EAAD,IACA,qBAAK5P,UAAU,YAAf,mBACA,cAAC,KAAD,CAAO2D,UAAQ,EAACxE,MAAoB,OAAbgQ,EAAoBA,EAAW,QAExD,sBAAKnP,UAAU,eAAf,UACE,cAACsN,GAAA,EAAD,IACA,qBAAKtN,UAAU,YAAf,oBACA,cAAC,KAAD,CAAO2D,UAAQ,EAACxE,MAAO+G,OAEzB,cAAC,IAAD,CACEhH,KAAK,OACLc,UAAU,cACVsB,QAAU,kBAAMwG,KAAQsI,KAAK,+CAH/B,wBAbuB,KAwB7B,cAACN,GAAD,CAASK,IAAI,WAAb,SACE,sBAAKnQ,UAAU,gBAAf,UACE,cAACuN,GAAA,EAAD,CAAcvN,UAAU,kBAD1B,gDAGE,qDAAuB,cAAC,IAAD,CAASuM,GAAG,IAAZ,kBAAvB,eAJwB,QA9BzB,cAAC,IAAD,CAAUA,GAAG,cCHjB8D,GAAmBC,KAAnBD,OAAQE,GAAWD,KAAXC,QAEFC,GAAMxR,IAAMC,MAAK,WAI5B,IAAMwR,EAA4B,CAChCC,SAAU,QACVC,IAAK,MACLC,UAAW,SACXtF,MAAO,OACPuF,OAAQ,GAGJ9J,EAAS6E,cAAmC,SAAAC,GAAK,OAAIA,EAAMC,KAAK/E,UAChEC,EAAgB4E,cAAmC,SAAAC,GAAK,OAAIA,EAAMC,KAAK9E,iBACvE8J,EAAgBlF,cAA6C,SAAAC,GAAK,OAAIA,EAAMkF,QAAQvK,UACpFC,EAAQmF,cAAyC,SAAAC,GAAK,OAAIA,EAAMkF,QAAQtK,SAExEc,EAAW4C,eAEjBC,qBAAU,WACR7C,GdgCK,SAACA,GACN1B,IACGR,MAAK,SAAAC,GACJL,aAAagI,QAAQ,QAAS3H,EAAI4H,OAClC3F,EAASpB,EAAUb,EAAIc,OACvBmB,EAASN,IAAY,IACrBM,EAASJ,IAAmB,OAE7BQ,OAAM,SAAAC,GACLL,EAASN,IAAY,IACrBM,EAASJ,IAAmB,IAC5BlC,aAAa+L,WAAW,iBc1C3B,CAACzJ,IAIJ6C,qBAAU,WACN3D,GAASqB,KAAQrB,MAAMA,OAAOjG,GAAW,kBAAM+G,EAASb,GAAW,UAAQrB,SAC5E,CAACoB,EAAOc,IAGX,IAAM2H,EAASlO,uBAAY,WACzBuG,EdHD,CAACrI,KAAMqH,EAAkB0K,WcIvB,CAAC1J,IAEJ,OAAKP,EAKH,8BACE,eAAC,KAAD,WACE,eAACqJ,GAAD,CAAQrQ,UAAU,iBAAlB,UACE,eAAC,IAAD,CAASA,UAAU,aAAauM,GAAG,IAAnC,UACE,qBAAK2E,IAAKC,GAAUnR,UAAU,WAAWoR,IAAI,SAC7C,6CAEDrK,GAAU,cAAC,GAAD,CAAemI,OAAQA,OAEjB,YAAlB4B,GAA+B,cAAC,KAAD,CAAM9O,MAAOyO,IAC7C,cAACF,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAM,IAAKC,OAAQ,kBAAM,cAAC,IAAD,CAAUhF,GAAI,cACpD,cAAC,IAAD,CAAO+E,KAAK,SAASC,OAAQ,kBAAM,cAAC5F,GAAD,OACnC,cAAC,IAAD,CAAO2F,KAAK,SAASC,OAAQ,kBAAM,cAAC3E,GAAD,OACnC,cAAC,IAAD,CAAO0E,KAAK,gBAAgBC,OAAQ,kBAAM,cAACxD,GAAD,OAC1C,cAAC,IAAD,CAAOuD,KAAK,WAAWC,OAAQ,kBAAM,cAACvB,GAAD,OAErC,cAAC,IAAD,CAAOuB,OAAQ,kBAAM,cAAC3C,GAAD,iBAtBtB,cAAC,KAAD,CAAM5M,MAAOyO,OCxCTe,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrM,MAAK,YAAkD,IAA/CsM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,4BCGRO,GAAWC,aAAgB,CAC/BxK,MfI0B,WAAgG,IAA/FoE,EAA8F,uDAAhE9F,GAAcmM,EAAkD,uCACzH,OAAQA,EAAOhT,MAEb,KAAK4H,GAAmBY,UACtB,OAAOwK,EAAOzK,MAAMiE,KAAI,SAAA1D,GAAI,kCAASA,GAAT,IAAe/D,OAAQ,WAErD,KAAK6C,GAAmBoB,SACtB,MAAM,GAAN,mBAAW2D,GAAX,4BAAsBqG,EAAOlK,MAA7B,IAAmC/D,OAAQ,UAE7C,KAAK6C,GAAmBsB,kBACtB,OAAOyD,EAAMH,KAAI,SAAA1D,GAAI,OAAIA,EAAKhC,MAAQkM,EAAOzM,OAApB,2BAAiCuC,GAAjC,IAAuCxI,MAAO0S,EAAO3P,YAAayF,KAE7F,KAAKlB,GAAmByB,YACtB,OAAOsD,EAAM5H,QAAO,SAAA+D,GAAI,OAAIA,EAAKhC,MAAQkM,EAAOzM,UAElD,KAAKqB,GAAmBkF,mBACtB,OAAOH,EAAMH,KAAI,SAAA1D,GAAI,OAAIA,EAAKhC,MAAQkM,EAAOzM,OAApB,2BAAiCuC,GAAjC,IAAuC/D,OAAQiO,EAAOjO,SAAU+D,KAE3F,KAAKzB,EAAkB0K,OACrB,MAAO,GAET,QACE,OAAOpF,IezBX9C,MdK0B,WAA+D,IAA9D8C,EAA6D,uDAA1C9F,GAAcmM,EAA4B,uCACxF,OAAQA,EAAOhT,MAEb,KAAK4H,GAAmBY,UACtB,IAAMyK,EAAS,eAAOtG,GAItB,OAHAqG,EAAOzK,MAAM2K,SAAQ,SAAApK,GACnBmK,EAAUnK,EAAKhC,KAAO,MAEjBmM,EAGT,KAAKrL,GAAmBoB,SACtB,OAAO,2BAAI2D,GAAX,kBAAmBqG,EAAOlK,KAAKhC,IAAM,KAGvC,KAAKc,GAAmByB,YACtB,IAAM4J,EAAS,eAAOtG,GAEtB,cADOsG,EAAUD,EAAOzM,QACjB0M,EAGT,KAAK9K,GAAmB2B,UACtB,OAAO,2BAAI6C,GAAX,kBAAmBqG,EAAOzM,OAASyM,EAAOnJ,QAG5C,KAAK1B,GAAmB+B,SACtB,OAAO,2BAAIyC,GAAX,kBAAmBqG,EAAOzM,OAA1B,sBAAuCoG,EAAMqG,EAAO/I,KAAKkJ,UAAzD,CAAmEH,EAAO/I,SAG5E,KAAK9B,GAAmBkC,mBACtB,OAAO,2BACFsC,GADL,kBAEGqG,EAAOzM,OAASoG,EAAMqG,EAAOzM,QAC3BiG,KAAI,SAAAvC,GAAI,OAAIA,EAAKnD,MAAQkM,EAAOxJ,OAApB,2BAAiCS,GAAjC,IAAuCpH,QAASmQ,EAAOvJ,gBAAiBQ,OAI3F,KAAK9B,GAAmBqC,kBACtB,OAAO,2BACFmC,GADL,kBAEGqG,EAAOzM,OAASoG,EAAMqG,EAAOzM,QAC3BiG,KAAI,SAAAvC,GAAI,OAAIA,EAAKnD,MAAQkM,EAAOxJ,OAApB,2BAAiCS,GAAjC,IAAuC3J,MAAO0S,EAAOtJ,YAAaO,OAIrF,KAAK9B,GAAmBwC,YACtB,OAAO,2BAAIgC,GAAX,kBAAmBqG,EAAOzM,OAASoG,EAAMqG,EAAOzM,QAAQxB,QAAO,SAAAkF,GAAI,OAAIA,EAAKnD,MAAQkM,EAAOxJ,YAG7F,KAAKnC,EAAkB0K,OACrB,MAAO,GAET,QACE,OAAOpF,IczDXmC,aZCiC,WAAkG,IAAjGnC,EAAgG,uDAAjE9F,GAAcmM,EAAmD,uCAClI,OAAQA,EAAOhT,MAEb,KAAK2J,GAA0B8D,gBAC7B,OAAO,2BAAId,GAAX,IAAkBY,WAAYyF,EAAO/S,QAEvC,QACE,OAAO0M,IYPXC,KhBKyB,WAAkF,IAAjFD,EAAgF,uDAAzD9F,GAAcmM,EAA2C,uCAC1G,OAAQA,EAAOhT,MAEb,KAAKqH,EAAkBW,YACrB,OAAO,2BAAI2E,GAAX,IAAkB9E,OAAQmL,EAAO/S,QAEnC,KAAKoH,EAAkBa,mBACrB,OAAO,2BAAIyE,GAAX,IAAkB7E,cAAekL,EAAO/S,QAE1C,KAAKoH,EAAkB0K,OAErB,OADAhM,aAAa+L,WAAW,SACjB,2BAAInF,GAAX,IAAkB9E,QAAQ,IAE5B,QACE,OAAO8E,IgBlBXzF,K3BEyB,WAAkF,IAAjFyF,EAAgF,uDAAzD9F,EAAcmM,EAA2C,uCAC1G,OAAQA,EAAOhT,MAEb,KAAKJ,EAAkBuH,SACrB,OAAO,2BAAIwF,GAAUqG,EAAO5L,SAE9B,KAAKC,EAAkB0K,OACrB,OAAO,2BAAIpF,GAAX,IAAkB7F,IAAK,KAAME,MAAO,GAAID,KAAM,OAEhD,QACE,OAAO4F,I2BXXkF,QjBF4B,WAAwF,IAAvFlF,EAAsF,uDAA5D9F,EAAcmM,EAA8C,uCACnH,OAAQA,EAAOhT,MAEb,KAAK4G,EAAqBe,WACxB,OAAO,2BAAIgF,GAAX,IAAkBrF,OAAQ0L,EAAO1L,SAEnC,KAAKV,EAAqBa,UACxB,OAAO,2BAAIkF,GAAX,IAAkBpF,MAAOyL,EAAOzL,QAElC,QACE,OAAO,eAAIoF,KiBPfzG,OTL2B,WAAsF,IAArFyG,EAAoF,uDAA3D9F,GAAcmM,EAA6C,uCAChH,OAAQA,EAAOhT,MAEb,KAAKsN,GAAoBgD,sBACvB,OAAO,2BAAI3D,GAAX,IAAkBhH,gBAAiBqN,EAAOrN,kBAE5C,KAAK0B,EAAkB0K,OACrB,OAAO,2BAAIpF,GAAX,IAAkBhH,qBAAiBrE,IAErC,QACE,OAAOqL,MSEPyG,GAAmBC,OAAOC,sCAAwCC,KAC3DC,GAAQC,aAAYX,GAAUM,GAAiBM,aAAgBC,QAG5EN,OAAOG,MAAQA,G,OCpBfI,IAASvB,OACP,cAAC,KAAD,CAAUmB,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAClC,GAAD,QAGJuC,SAASC,eAAe,SAM1BxB,O","file":"static/js/main.3470fcac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardText\":\"EditableItem_cardText___vvay\",\"taskInput\":\"EditableItem_taskInput__1V1EO\",\"cardInput\":\"EditableItem_cardInput__3h7af\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskInput\":\"AddItem_taskInput__uqK88\",\"cardInput\":\"AddItem_cardInput__Oh6Nq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardWrapper\":\"Task_cardWrapper__2pXNL\"};","import {UserType} from '../dal/auth-api'\nimport {ACTIONS_AUTH_TYPE} from './auth-reducer'\nimport {AppReducersType} from './store'\n\nexport enum ACTIONS_USER_TYPE {\n  SET_USER = 'User/SET_USER',\n}\n\nexport type UserStateType = {\n  _id: string | null\n  name: string | null\n  email: string\n}\nconst initialState: UserStateType = {\n  _id: null,\n  name: null,\n  email: ''\n}\n\nexport const userReducer = (state: UserStateType = initialState, action: AppReducersType): UserStateType => {\n  switch (action.type) {\n\n    case ACTIONS_USER_TYPE.SET_USER:\n      return {...state, ...action.payload}\n\n    case ACTIONS_AUTH_TYPE.LOGOUT:\n      return {...state, _id: null, email: '', name: null}\n\n    default:\n      return state\n  }\n}\n\n// actions\nexport const setUserAC = (user: UserType) =>\n  ({type: ACTIONS_USER_TYPE.SET_USER, payload: user} as const)\n\n// types\nexport type SetUserACType = ReturnType<typeof setUserAC>\nexport type UserACType = SetUserACType\n\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport s from './EditableItem.module.css'\nimport {DEV_VERSION} from '../../../config'\n\ntype EditableSpanPropsType = {\n  type: 'card' | 'task'\n  value: string\n  changeValue: (value: string) => void\n  editMode: boolean,\n  setEditMode: (flag: boolean) => void\n}\n\nexport const EditableItem: React.FC<EditableSpanPropsType> = React.memo((\n  {\n    type,\n    value,\n    changeValue,\n    editMode,\n    setEditMode,\n  }\n) => {\n  DEV_VERSION && console.log('EditableItem')\n\n  let [title, setTitle] = useState<string>(value)\n\n  const onDoubleClickSpan = () => {\n    setEditMode(true)\n  }\n\n  const updateItem = () => {\n    changeValue(title)\n    setEditMode(false)\n  }\n\n  const onClickEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.charCode === 13) {\n      updateItem()\n    }\n  }\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.currentTarget.value)\n  }\n\n  return editMode\n    ? <input\n        value={title}\n        onChange={onChangeHandler}\n        onBlur={updateItem}\n        autoFocus={true}\n        className={type === 'task' ? s.taskInput : s.cardInput}\n        onKeyPress={onClickEnter}\n    />\n    : <span onDoubleClick={onDoubleClickSpan} className={type === 'card' ? s.cardText : undefined}>{title}</span>\n})","import {Button, Checkbox, Dropdown, Menu} from 'antd'\nimport React, {CSSProperties, useCallback, useState} from 'react'\nimport {DEV_VERSION} from '../../../config'\nimport {EditableItem} from '../../common/editableItem/EditableItem'\nimport {DeleteOutlined, EditOutlined, EllipsisOutlined, CheckOutlined} from '@ant-design/icons'\nimport s from './Task.module.css'\n\nexport type TaskPropsType = {\n  id: string\n  title: string\n  isChecked: boolean\n  changeTaskTitle: (taskId: string, title: string) => void\n  changeTaskStatus: (taskId: string, taskStatus: boolean) => void\n  removeTask: (taskId: string) => void\n}\nexport const Task: React.FC<TaskPropsType> = React.memo((\n  {\n    id,\n    title,\n    isChecked,\n    changeTaskTitle,\n    changeTaskStatus,\n    removeTask\n  }\n) => {\n  DEV_VERSION && console.log('Task ', title)\n\n  const checkboxAlignStyles: CSSProperties = {\n    marginLeft: 10,\n    marginRight: 10\n  }\n\n  const [editMode, setEditMode] = useState<boolean>(false)\n\n  const setEditModeHandler = useCallback((value: boolean) => {\n    setEditMode(value)\n  },[])\n\n  const onChangeTaskTitleHandler = useCallback((newTitle: string) => {\n    changeTaskTitle(id, newTitle)\n  },[changeTaskTitle, id])\n\n  const changeTaskStatusHandler = useCallback(() => {\n    changeTaskStatus(id, !isChecked)\n  },[changeTaskStatus, id, isChecked])\n\n  const onClickRemoveDropdown = useCallback(() => {\n    removeTask(id)\n  },[removeTask, id])\n\n  const menu = (\n    <Menu onClick={() => {}}>\n      <Menu.Item key=\"1\" icon={<CheckOutlined/>} onClick={changeTaskStatusHandler}>\n        Marked\n      </Menu.Item>\n      <Menu.Item key=\"2\" icon={<EditOutlined/>} onClick={() => setEditMode(true)}>\n        Edit\n      </Menu.Item>\n      <Menu.Divider/>\n      <Menu.Item key=\"3\" danger icon={<DeleteOutlined/>} onClick={onClickRemoveDropdown}>\n        Remove\n      </Menu.Item>\n    </Menu>\n  )\n\n  return (\n    // обрачиваем в div чтобы на флексах выровнять чекбокс, спан и меню\n    <div className={s.cardWrapper}>\n      <div>\n        <Checkbox checked={isChecked} onChange={changeTaskStatusHandler} style={checkboxAlignStyles}/>\n        <EditableItem\n          value={title}\n          type={'task'}\n          changeValue={onChangeTaskTitleHandler}\n          editMode={editMode}\n          setEditMode={setEditModeHandler}\n        />\n      </div>\n      <Dropdown overlay={menu} trigger={['click']}>\n        <Button icon={<EllipsisOutlined/>} type={'text'}/>\n      </Dropdown>\n\n    </div>\n  )\n})","import {DEV_VERSION} from '../../../config'\nimport React, {useCallback, useState} from 'react'\nimport {Badge, Button, Dropdown, Menu} from 'antd'\nimport { EditOutlined, DeleteOutlined, EllipsisOutlined } from '@ant-design/icons'\nimport {EditableItem} from '../../common/editableItem/EditableItem'\nimport './cardHeader.css'\n\nexport type CardHeaderPropsType = {\n  cardTitle: string\n  taskCount: number\n  removeCard: () => void\n  changeCardTitle: (newCardTitle: string) => void\n}\nexport const CardHeader: React.FC<CardHeaderPropsType> = React.memo((\n  {\n    cardTitle,\n    taskCount,\n    removeCard,\n    changeCardTitle,\n  }\n) => {\n  DEV_VERSION && console.log('CardHeader ', cardTitle)\n\n  const [editMode, setEditMode] = useState<boolean>(false)\n\n  const setEditModeHandler = useCallback((value: boolean) => {\n    setEditMode(value)\n  },[])\n\n  const onClickRemoveDropdown = useCallback(() => {\n    removeCard()\n  },[removeCard])\n\n  const onClickEditDropdown = useCallback(() => {\n    setEditMode(true)\n  }, [])\n\n  const menu = (\n    <Menu>\n      <Menu.Item key='1' icon={<EditOutlined/>} onClick={onClickEditDropdown}>\n        Edit\n      </Menu.Item>\n      <Menu.Divider/>\n      <Menu.Item key='2' danger icon={<DeleteOutlined />} onClick={onClickRemoveDropdown}>\n        Remove\n      </Menu.Item>\n    </Menu>\n  )\n\n  return (\n    <div className='wrapper-cardHeader'>\n        <Badge count={taskCount} offset={[7, -7]} className='badge-card'>\n          <EditableItem\n            type='card'\n            value={cardTitle}\n            changeValue={changeCardTitle}\n            editMode={editMode}\n            setEditMode={setEditModeHandler}\n          />\n        </Badge>\n      <Dropdown overlay={menu} trigger={['click']}>\n        <Button icon={<EllipsisOutlined rotate={90}/>} type='text' shape='circle'/>\n      </Dropdown>\n   </div>\n  )\n})","import React from 'react'\nimport { Progress } from 'antd'\nimport {DEV_VERSION} from '../../../config'\n\nexport type CardProgressBarPropsType = {\n  progress: number\n}\nexport const CardProgressBar: React.FC<CardProgressBarPropsType> = React.memo((\n  {\n    progress,\n  }\n) => {\n  DEV_VERSION && console.log('CardProgressBar')\n\n  return <Progress percent={progress} showInfo/>\n})","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\nimport {DEV_VERSION} from '../../../config'\nimport {Button, Checkbox} from 'antd'\nimport {PlusCircleOutlined} from '@ant-design/icons'\nimport s from './AddItem.module.css'\n\nexport type AddTaskPropsType = {\n  type: 'card' | 'task'\n  addItem: (itemTitle: string) => void\n}\n\nexport const AddItem: React.FC<AddTaskPropsType> = React.memo((\n  {\n    type,\n    addItem,\n  }\n) => {\n  DEV_VERSION && console.log('Add item')\n\n  const [isAdding, setIsAdding] = useState<boolean>(false)\n  const [itemTitle, setItemTitle] = useState<string>('')\n\n  const onChangeTaskTitle = (e: ChangeEvent<HTMLInputElement>) => {\n    setItemTitle(e.currentTarget.value)\n  }\n\n  const addTaskItem = () => {\n    if(itemTitle !== '') {\n      addItem(itemTitle)\n      setItemTitle('')\n    }\n    setIsAdding(false)\n  }\n\n  const onClickAddBtn = () => {\n    setIsAdding(true)\n  }\n\n  const onClickEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.charCode === 13) {\n      addTaskItem()\n    }\n  }\n\n\n  return (\n    <div>\n      {isAdding\n        ? <div onBlur={addTaskItem}>\n            {type === 'task'\n              ? <Checkbox disabled style={{marginLeft: 10, marginRight: 10}}/>\n              : null}\n            <input\n              className={type === 'task' ? s.taskInput : s.cardInput}\n              placeholder={type === 'task' ? 'Enter new task' : 'Enter new card'}\n              onChange={onChangeTaskTitle}\n              value={itemTitle}\n              autoFocus\n              onKeyPress={onClickEnter}\n            />\n          </div>\n        : <Button\n            type=\"text\"\n            icon={<PlusCircleOutlined/>}\n            block\n            onClick={onClickAddBtn}\n          >Add {type}</Button>\n      }\n    </div>\n  )\n})","import React, {useCallback} from 'react'\nimport {DEV_VERSION} from '../../../config'\nimport {Button} from 'antd'\nimport { CardFilterValuesType } from '../../../bll/cards-reducer'\nimport './filterTasks.css'\n\nexport type FilterTasksPropsType = {\n  changeFilter: (value: CardFilterValuesType) => void\n  filter: CardFilterValuesType\n}\nexport const FilterTasks: React.FC<FilterTasksPropsType> = React.memo((\n  {\n    changeFilter,\n    filter\n  }\n) => {\n  DEV_VERSION && console.log('Filter tasks')\n\n  const onAllBtnClickHandler = useCallback(() => changeFilter('ALL'), [changeFilter])\n  const onActiveBtnClickHandler = useCallback(() => changeFilter('ACTIVE'), [changeFilter])\n  const onDoneBtnClickHandler = useCallback(() => changeFilter('DONE'),[changeFilter])\n\n  // additional style for filter buttons\n  const styles = {flex: 1}\n\n  return (\n    <div className='wrapper-filterBtn'>\n        <Button onClick={onAllBtnClickHandler} style={filter === 'ALL' ? {flex: 1, backgroundColor: '#eff2f5'} : styles}>All</Button>\n        <Button onClick={onActiveBtnClickHandler} style={filter === 'ACTIVE' ? {flex: 1, backgroundColor: '#eff2f5'} : styles}>Active</Button>\n        <Button onClick={onDoneBtnClickHandler} style={filter === 'DONE' ? {flex: 1, backgroundColor: '#eff2f5'} : styles}>Done</Button>\n    </div>\n  )\n})","import axios from 'axios'\n\nexport const instance = axios.create({\n  // 1. add script: \"start\": \"HTTPS=true react-scripts start\" to package.json for using HTTPS protocol\n  // 2. and need to uncomment some code on the server side (see mytasks-backend repo)\n  // baseURL: 'https://localhost:3010',\n\n  // local URL nodeJS server\n  // baseURL: 'http://localhost:3010',\n\n  // Heroku URL nodeJS server\n  baseURL: 'https://fierce-falls-39397.herokuapp.com'\n})\n","import {instance} from './instance'\n\nexport const cardsAPI = {\n  getCards(searchCardTitle: string | undefined) {\n    return instance.get<GetCardsResponseType>(`/cards`,\n      {\n        headers: {Authorization: `Bearer ${localStorage.getItem('token')}`},\n        params: {search: searchCardTitle},\n      })\n      .then(res => res.data)\n  },\n  createCard(cardTitle: string) {\n    return instance.post<CreateCardResponseType>(`/cards`, {title: cardTitle},\n      {headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}})\n      .then(res => res.data)\n  },\n  changeCardTitle(cardId: string, newCardTitle: string) {\n    return instance.put<ChangeCardResponseType>(`/cards/${cardId}`, { title: newCardTitle },\n      {headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}})\n      .then(res => res.data)\n  },\n  removeCard(cardId: string) {\n    return instance.delete<RemoveCardResponseType>(`/cards/${cardId}`,\n      {headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}})\n      .then(res => res.data)\n  },\n}\n\n// types\nexport type CardType = { _id: string, title: string }\nexport type GetCardsResponseType = Array<CardType>\nexport type CreateCardResponseType = { item: CardType }\nexport type ChangeCardResponseType = { item: CardType }\nexport type RemoveCardResponseType = { success: boolean }\n","import {instance} from './instance'\nimport {RegistrationDataType} from '../components/registration/RegistrationForm'\nimport {LoginDataType} from '../components/login/LoginForm';\n\nexport const authAPI = {\n  login(data: LoginDataType) {\n    return instance.post<LoginResponseType>(`/auth/login`, data).then(res => res.data)\n  },\n  registration(data: RegistrationDataType) {\n    return instance.post<RegistrationResponseType>(`/auth/registration`, data).then(res => res.data)\n  },\n  authMe() {\n    return instance.get<LoginResponseType>(`/auth/me`,\n      {headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}})\n      .then(res => res.data)\n  },\n}\n\n// types\nexport type UserType = {\n  _id: string\n  name?: string\n  email: string\n}\nexport type LoginResponseType = {\n  token: string\n  user: UserType\n}\nexport type RegistrationResponseType = {\n  message: string\n}\n\n","import {AppReducersType} from './store'\n\nexport enum ACTIONS_REQUEST_TYPE {\n  SET_STATUS = 'Request/SET_STATUS',\n  SET_ERROR = 'Request/SET_ERROR',\n}\nexport type RequestStatusType = 'init' | 'loading' | 'succeeded' | 'failed'\nexport type RequestStateType = {\n  status: RequestStatusType\n  error: string | null\n}\nconst initialState: RequestStateType = {\n  status: 'init',\n  error: null,\n}\n\nexport const requestReducer = (state: RequestStateType = initialState, action: AppReducersType): RequestStateType => {\n  switch (action.type) {\n\n    case ACTIONS_REQUEST_TYPE.SET_STATUS:\n      return {...state, status: action.status}\n\n    case ACTIONS_REQUEST_TYPE.SET_ERROR:\n      return {...state, error: action.error}\n\n    default:\n      return {...state}\n  }\n}\n\n// actions\nexport const setErrorAC = (error: string | null) =>\n  ({ type: ACTIONS_REQUEST_TYPE.SET_ERROR, error } as const)\n\nexport const setStatusAC = (status:  RequestStatusType) =>\n  ({ type: ACTIONS_REQUEST_TYPE.SET_STATUS, status } as const)\n\n// types\nexport type SetRequestErrorACType = ReturnType<typeof setErrorAC>\nexport type SetStatusACType = ReturnType<typeof setStatusAC>\nexport type RequestACType = SetRequestErrorACType | SetStatusACType","import {AppReducersType, AppThunksType} from './store'\nimport {authAPI} from '../dal/auth-api'\nimport {LoginDataType} from '../components/login/LoginForm'\nimport {setUserAC, UserACType} from './user-reducer'\nimport {setErrorAC} from './request-reducer'\n\nexport enum ACTIONS_AUTH_TYPE {\n  SET_IS_AUTH = 'Auth/SET_IS_AUTH',\n  SET_IS_INITIALIZED = 'Auth/SET_IS_INITIALIZED',\n  LOGOUT = 'Auth/LOGOUT',\n}\n\nexport type AuthStateType = {\n  isAuth: boolean\n  isInitialized: boolean\n}\nconst initialState: AuthStateType = {\n  isAuth: false,\n  isInitialized: false\n}\n\nexport const authReducer = (state: AuthStateType = initialState, action: AppReducersType): AuthStateType => {\n  switch (action.type) {\n\n    case ACTIONS_AUTH_TYPE.SET_IS_AUTH:\n      return {...state, isAuth: action.value}\n\n    case ACTIONS_AUTH_TYPE.SET_IS_INITIALIZED:\n      return {...state, isInitialized: action.value}\n\n    case ACTIONS_AUTH_TYPE.LOGOUT:\n      localStorage.removeItem('token')\n      return {...state, isAuth: false}\n\n    default:\n      return state\n  }\n}\n\n// actions\nexport const setIsAuthAC = (value: boolean) =>\n  ({type: ACTIONS_AUTH_TYPE.SET_IS_AUTH, value} as const)\n\nexport const setIsInitializedAC = (value: boolean) =>\n  ({type: ACTIONS_AUTH_TYPE.SET_IS_INITIALIZED, value} as const)\n\nexport const logoutAC = () =>\n  ({type: ACTIONS_AUTH_TYPE.LOGOUT} as const)\n\n// types\nexport type SetIsLoggedInACType = ReturnType<typeof setIsAuthAC>\nexport type SetIsInitializedACType = ReturnType<typeof setIsInitializedAC>\nexport type LogoutACType = ReturnType<typeof logoutAC>\nexport type AuthACType = SetIsLoggedInACType | LogoutACType | UserACType | SetIsInitializedACType\n\n// thunks\nexport const loginTC = (data: LoginDataType): AppThunksType => {\n  return (dispatch) => {\n    authAPI.login(data)\n      .then(res => {\n        localStorage.setItem('token', res.token)\n        dispatch(setIsAuthAC(true))\n        dispatch(setUserAC(res.user))\n      })\n      .catch(err => {\n        dispatch(setErrorAC(err.response.data.message))\n      })\n  }\n}\n\nexport const authMeTC = (): AppThunksType => {\n  return (dispatch) => {\n    authAPI.authMe()\n      .then(res => {\n        localStorage.setItem('token', res.token)\n        dispatch(setUserAC(res.user))\n        dispatch(setIsAuthAC(true))\n        dispatch(setIsInitializedAC(true))\n      })\n      .catch(err => {\n        dispatch(setIsAuthAC(false))\n        dispatch(setIsInitializedAC(true))\n        localStorage.removeItem('token')\n        //console.log('error - authMeTC ', err)\n      })\n  }\n}","import {AppReducersType, AppThunksType} from './store'\nimport {cardsAPI, CardType} from '../dal/cards-api'\nimport {ACTIONS_AUTH_TYPE} from './auth-reducer'\nimport {setErrorAC, setStatusAC} from './request-reducer'\n\nexport enum ACTIONS_CARDS_TYPE {\n  ADD_CARD = 'Cards/ADD_CARD',\n  REMOVE_CARD = 'Cards/REMOVE_CARD',\n  CHANGE_CARD_TITLE = 'Cards/CHANGE_CARD_TITLE',\n  CHANGE_CARD_FILTER = 'Cards/CHANGE_CARD_FILTER',\n  SET_CARDS = 'Cards/SET_CARDS',\n}\n\nexport type CardFilterValuesType = 'ALL' | 'ACTIVE' | 'DONE'\nexport type CardStateType = CardType & { filter: CardFilterValuesType }\nconst initialState: Array<CardStateType> = []\n\nexport const cardsReducer = (state: Array<CardStateType> = initialState, action: AppReducersType): Array<CardStateType> => {\n  switch (action.type) {\n\n    case ACTIONS_CARDS_TYPE.SET_CARDS:\n      return action.cards.map(card => ({...card, filter: 'ALL'}))\n\n    case ACTIONS_CARDS_TYPE.ADD_CARD:\n      return [...state, {...action.card, filter: 'ALL'}]\n\n    case ACTIONS_CARDS_TYPE.CHANGE_CARD_TITLE:\n      return state.map(card => card._id === action.cardId ? {...card, title: action.cardTitle} : card)\n\n    case ACTIONS_CARDS_TYPE.REMOVE_CARD:\n      return state.filter(card => card._id !== action.cardId)\n\n    case ACTIONS_CARDS_TYPE.CHANGE_CARD_FILTER:\n      return state.map(card => card._id === action.cardId ? {...card, filter: action.filter} : card)\n\n    case ACTIONS_AUTH_TYPE.LOGOUT:\n      return []\n\n    default:\n      return state\n  }\n}\n\n// actions\nexport const addCardAC = (card: CardType) => ({\n  type: ACTIONS_CARDS_TYPE.ADD_CARD,\n  card\n} as const)\nexport const setCardsAC = (cards: Array<CardType>) => ({\n  type: ACTIONS_CARDS_TYPE.SET_CARDS,\n  cards\n} as const)\nexport const changeCardTitleAC = (cardId: string, cardTitle: string) => ({\n  type: ACTIONS_CARDS_TYPE.CHANGE_CARD_TITLE,\n  cardId,\n  cardTitle,\n} as const)\nexport const removeCardAC = (cardId: string) => ({\n  type: ACTIONS_CARDS_TYPE.REMOVE_CARD,\n  cardId,\n} as const)\nexport const changeCardFilterAC = (filter: CardFilterValuesType, cardId: string) => ({\n  type: ACTIONS_CARDS_TYPE.CHANGE_CARD_FILTER,\n  cardId,\n  filter,\n} as const)\n\n// types\nexport type AddCardACType = ReturnType<typeof addCardAC>\nexport type SetCardsACType = ReturnType<typeof setCardsAC>\nexport type ChangeCardTitleACType = ReturnType<typeof changeCardTitleAC>\nexport type RemoveCardACType = ReturnType<typeof removeCardAC>\nexport type ChangeCardFilterACType = ReturnType<typeof changeCardFilterAC>\nexport type CardsACType = AddCardACType | SetCardsACType | ChangeCardTitleACType | RemoveCardACType | ChangeCardFilterACType\n\n// thunks\nexport const getCardsTC = (): AppThunksType => {\n  return (dispatch, getState) => {\n    const searchCardTitle = getState().search.searchCardTitle\n    dispatch(setStatusAC('loading'))\n    cardsAPI.getCards(searchCardTitle)\n      .then(res => {\n        dispatch(setCardsAC(res))\n        dispatch(setStatusAC('succeeded'))\n      })\n      .catch(err => {\n        dispatch(setErrorAC(err.response.data.message))\n        dispatch(setStatusAC('failed'))\n      })\n  }\n}\nexport const addCardTC = (cardTitle: string): AppThunksType => {\n  return (dispatch) => {\n    dispatch(setStatusAC('loading'))\n    cardsAPI.createCard(cardTitle)\n      .then(res => {\n        dispatch(addCardAC(res.item))\n        dispatch(setStatusAC('succeeded'))\n      })\n      .catch(err => {\n        dispatch(setErrorAC(err.message ? err.message : 'Something went wrong'))\n        dispatch(setStatusAC('failed'))\n      })\n  }\n}\nexport const changeCardTitleTC = (cardId: string, newCardTitle: string): AppThunksType => {\n  return (dispatch) => {\n    dispatch(setStatusAC('loading'))\n    cardsAPI.changeCardTitle(cardId, newCardTitle)\n      .then(() => {\n        dispatch(changeCardTitleAC(cardId, newCardTitle))\n        dispatch(setStatusAC('succeeded'))\n      })\n      .catch(err => {\n        dispatch(setErrorAC(err.message ? err.message : 'Something went wrong'))\n        dispatch(setStatusAC('failed'))\n      })\n  }\n}\nexport const removeCardTC = (cardId: string): AppThunksType => {\n  return (dispatch) => {\n    dispatch(setStatusAC('loading'))\n    cardsAPI.removeCard(cardId)\n      .then(() => {\n        dispatch(removeCardAC(cardId))\n        dispatch(setStatusAC('succeeded'))\n\n      })\n      .catch(err => {\n        dispatch(setErrorAC(err.message ? err.message : 'Something went wrong'))\n        dispatch(setStatusAC('failed'))\n      })\n  }\n}","import {ACTIONS_CARDS_TYPE} from './cards-reducer'\nimport {tasksAPI, TaskType} from '../dal/tasks-api'\nimport {AppReducersType, AppThunksType} from './store'\nimport {ACTIONS_AUTH_TYPE} from './auth-reducer'\nimport {setErrorAC, setStatusAC} from './request-reducer';\n\nexport enum ACTIONS_TASKS_TYPE {\n  CHANGE_TASK_STATUS = 'Tasks/CHANGE_TASK_STATUS',\n  ADD_TASK = 'Tasks/ADD_TASK',\n  CHANGE_TASK_TITLE = 'Tasks/CHANGE_TASK_TITLE',\n  REMOVE_TASK = 'Tasks/REMOVE_TASK',\n  SET_TASKS = 'Tasks/SET_TASKS',\n}\n\nexport type TasksType = {\n  [key: string]: Array<TaskType>\n}\nconst initialState: TasksType = {}\n\nexport const tasksReducer = (state: TasksType = initialState, action: AppReducersType) => {\n  switch (action.type) {\n\n    case ACTIONS_CARDS_TYPE.SET_CARDS: {\n      const copyState = {...state}\n      action.cards.forEach(card => {\n        copyState[card._id] = []\n      })\n      return copyState\n    }\n\n    case ACTIONS_CARDS_TYPE.ADD_CARD: {\n      return {...state, [action.card._id]: []}\n    }\n\n    case ACTIONS_CARDS_TYPE.REMOVE_CARD: {\n      const copyState = {...state}\n      delete copyState[action.cardId]\n      return copyState\n    }\n\n    case ACTIONS_TASKS_TYPE.SET_TASKS: {\n      return {...state, [action.cardId]: action.tasks}\n    }\n\n    case ACTIONS_TASKS_TYPE.ADD_TASK: {\n      return {...state, [action.cardId]: [...state[action.task.card_id], action.task]}\n    }\n\n    case ACTIONS_TASKS_TYPE.CHANGE_TASK_STATUS: {\n      return {\n        ...state,\n        [action.cardId]: state[action.cardId]\n          .map(task => task._id === action.taskId ? {...task, checked: action.taskIsChecked} : task )\n      }\n    }\n\n    case ACTIONS_TASKS_TYPE.CHANGE_TASK_TITLE: {\n      return {\n        ...state,\n        [action.cardId]: state[action.cardId]\n          .map(task => task._id === action.taskId ? {...task, title: action.taskTitle} : task )\n      }\n    }\n\n    case ACTIONS_TASKS_TYPE.REMOVE_TASK: {\n      return {...state, [action.cardId]: state[action.cardId].filter(task => task._id !== action.taskId)}\n    }\n\n    case ACTIONS_AUTH_TYPE.LOGOUT:\n      return {}\n\n    default:\n      return state\n  }\n}\n\n// actions\nexport const setTasksAC = (tasks: Array<TaskType>, cardId: string) => ({\n  type: ACTIONS_TASKS_TYPE.SET_TASKS,\n  tasks,\n  cardId,\n} as const)\nexport const addTaskAC = (task: TaskType, cardId: string) => ({\n  type: ACTIONS_TASKS_TYPE.ADD_TASK,\n  task,\n  cardId,\n} as const)\nexport const changeTaskStatusAC = (taskId: string, taskIsChecked: boolean, cardId: string) => ({\n  type: ACTIONS_TASKS_TYPE.CHANGE_TASK_STATUS,\n  taskId,\n  taskIsChecked,\n  cardId,\n} as const)\nexport const changeTaskTitleAC = (taskId: string, taskTitle: string, cardId: string) => ({\n  type: ACTIONS_TASKS_TYPE.CHANGE_TASK_TITLE,\n  taskId,\n  taskTitle,\n  cardId,\n} as const)\nexport const removeTaskAC = (taskId: string, cardId: string) => ({\n  type: ACTIONS_TASKS_TYPE.REMOVE_TASK,\n  taskId,\n  cardId\n} as const)\n\n\n// types\nexport type SetTasksACType = ReturnType<typeof setTasksAC>\nexport type AddTaskACType = ReturnType<typeof addTaskAC>\nexport type ChangeTaskStatusACType = ReturnType<typeof changeTaskStatusAC>\nexport type ChangeTaskTitleACType = ReturnType<typeof changeTaskTitleAC>\nexport type RemoveTaskACType = ReturnType<typeof removeTaskAC>\nexport type TasksACType = AddTaskACType | ChangeTaskTitleACType | ChangeTaskStatusACType | RemoveTaskACType | SetTasksACType\n\n// thunks\nexport const getTasksTC = (cardId: string): AppThunksType => {\n  return (dispatch) => {\n    dispatch(setStatusAC('loading'))\n    tasksAPI.getTasks(cardId)\n      .then(res => {\n        dispatch(setTasksAC(res, cardId))\n        dispatch(setStatusAC('succeeded'))\n      })\n      .catch(err => {\n        dispatch(setErrorAC(err.message ? err.message : 'Something went wrong'))\n        dispatch(setStatusAC('failed'))\n      })\n  }\n}\n\nexport const addTaskTC = (taskTitle: string, cardId: string): AppThunksType => {\n  return (dispatch) => {\n    dispatch(setStatusAC('loading'))\n    tasksAPI.createTask(taskTitle, cardId)\n      .then(res => {\n        dispatch(addTaskAC(res.item, cardId))\n        dispatch(setStatusAC('succeeded'))\n      })\n      .catch(err => {\n        dispatch(setErrorAC(err.message ? err.message : 'Something went wrong'))\n        dispatch(setStatusAC('failed'))\n      })\n  }\n}\n\n\nexport const changeTaskStatusTC = (taskId: string, taskIsChecked: boolean, cardId: string): AppThunksType => {\n  return (dispatch) => {\n    dispatch(setStatusAC('loading'))\n    tasksAPI.changeTaskStatus(taskId, taskIsChecked, cardId)\n      .then(res => {\n        dispatch(changeTaskStatusAC(taskId, taskIsChecked, cardId))\n        dispatch(setStatusAC('succeeded'))\n      })\n      .catch(err => {\n        dispatch(setErrorAC(err.message ? err.message : 'Something went wrong'))\n        dispatch(setStatusAC('failed'))\n      })\n  }\n}\n\nexport const changeTaskTitleTC = (taskId: string, taskTitle: string, cardId: string): AppThunksType => {\n  return (dispatch) => {\n    dispatch(setStatusAC('loading'))\n    tasksAPI.changeTaskTitle(taskId, taskTitle, cardId)\n      .then(res => {\n        dispatch(changeTaskTitleAC(taskId, taskTitle, cardId))\n        dispatch(setStatusAC('succeeded'))\n      })\n      .catch(err => {\n        dispatch(setErrorAC(err.message ? err.message : 'Something went wrong'))\n        dispatch(setStatusAC('failed'))\n      })\n  }\n}\n\nexport const removeTaskTC = (taskId: string, cardId: string): AppThunksType => {\n  return (dispatch) => {\n    dispatch(setStatusAC('loading'))\n    tasksAPI.removeTask(taskId, cardId)\n      .then(res => {\n        dispatch(removeTaskAC(taskId, cardId))\n        dispatch(setStatusAC('succeeded'))\n      })\n      .catch(e => {\n        console.log('error removeTaskTC ', e)\n      })\n  }\n}\n\n\n","import {instance} from './instance'\n\nexport const tasksAPI = {\n  getTasks(cardId: string) {\n    return instance.get<GetTasksResponseType>(`/cards/${cardId}/tasks`,\n      {headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}})\n      .then(res => res.data)\n  },\n  createTask(cardTitle: string, cardId: string) {\n    return instance.post<CreateTaskResponseType>(`/cards/${cardId}/tasks`,{title: cardTitle},\n      {headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}})\n      .then(res => res.data)\n  },\n  changeTaskStatus(taskId: string, taskIsChecked: boolean, cardId: string) {\n    return instance.put<ChangeTaskResponseType>(`/cards/${cardId}/tasks/${taskId}`,{checked: taskIsChecked},\n      {headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}})\n      .then(res => res.data)\n  },\n  changeTaskTitle(taskId: string, taskTitle: string, cardId: string) {\n    return instance.put<ChangeTaskResponseType>(`/cards/${cardId}/tasks/${taskId}`, {title: taskTitle},\n      {headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}})\n      .then(res => res.data)\n  },\n  removeTask(taskId: string, cardId: string) {\n    return instance.delete<ChangeTaskResponseType>(`/cards/${cardId}/tasks/${taskId}`,\n      {headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}})\n      .then(res => res.data)\n  },\n}\n\n// types\nexport type TaskType = {\n  _id: string\n  card_id: string\n  checked: boolean\n  title: string\n}\nexport type GetTasksResponseType = Array<TaskType>\nexport type CreateTaskResponseType = { item: TaskType }\nexport type ChangeTaskResponseType = { item: TaskType }\n","import {AppReducersType, AppThunksType} from './store'\nimport {authAPI} from '../dal/auth-api'\nimport {RegistrationDataType} from '../components/registration/RegistrationForm'\nimport {setErrorAC} from './request-reducer'\n\nexport enum ACTIONS_REGISTRATION_TYPE {\n  SET_IS_REGISTER = 'Login/SET_IS_REGISTER',\n}\n\nexport type RegistrationStateType = {\n  isRegister: boolean\n}\nconst initialState: RegistrationStateType = {\n  isRegister: false\n}\n\nexport const registrationReducer = (state: RegistrationStateType = initialState, action: AppReducersType): RegistrationStateType => {\n  switch (action.type) {\n\n    case ACTIONS_REGISTRATION_TYPE.SET_IS_REGISTER:\n      return {...state, isRegister: action.value}\n\n    default:\n      return state\n  }\n}\n\n// actions\nexport const setIsRegisterAC = (value: boolean) =>\n  ({type: ACTIONS_REGISTRATION_TYPE.SET_IS_REGISTER, value} as const)\n\n// types\nexport type SetIsRegisterACType = ReturnType<typeof setIsRegisterAC>\nexport type RegistrationACType = SetIsRegisterACType\n\n// thunks\nexport const registrationTC = (data: RegistrationDataType): AppThunksType => {\n  return (dispatch) => {\n    authAPI.registration(data)\n      .then(() => {\n        dispatch(setIsRegisterAC(true))\n      })\n      .catch(err => {\n        dispatch(setErrorAC(err.response.data.message))\n      })\n  }\n}","import React, {CSSProperties, useCallback, useEffect, useMemo} from 'react'\nimport {Task} from './task/Task'\nimport {DEV_VERSION} from '../../config'\nimport {CardHeader} from './cardHeader/CardHeader'\nimport {CardProgressBar} from './cardProgressBar/CardProgressBar'\nimport {Card, Divider} from 'antd'\nimport {AddItem} from '../common/addItem/AddItem'\nimport {FilterTasks} from './filterTasks/FilterTasks'\nimport {getTasksTC} from '../../bll/tasks-reducer'\nimport {CardFilterValuesType, CardStateType} from '../../bll/cards-reducer'\nimport {useDispatch} from 'react-redux'\nimport {TaskType} from '../../dal/tasks-api'\n\nexport type CardTasksPropsType = {\n  card: CardStateType\n  removeCard: (cardId: string) => void\n  changeCardTitle: (cardId: string, title: string) => void\n  tasks: Array<TaskType>\n  changeTaskTitle: (taskId: string, title: string, cardId: string) => void\n  changeTaskStatus: (taskId: string, taskStatus: boolean, cardId: string) => void\n  removeTask: (taskId: string, cardId: string) => void\n  addTask: (taskTitle: string, cardId: string) => void\n  changeFilter: (value: CardFilterValuesType, cardId: string) => void\n}\nexport const CardTasks: React.FC<CardTasksPropsType> = React.memo((\n  {\n    card,\n    removeCard,\n    changeCardTitle,\n    tasks,\n    changeTaskTitle,\n    changeTaskStatus,\n    removeTask,\n    addTask,\n    changeFilter,\n  }\n) => {\n  DEV_VERSION && console.log('CardTasks ', card.title)\n\n  const cardStyles: CSSProperties = {\n    width: 300,\n    margin: 20,\n    borderRadius: 5,\n    boxShadow: '0px 0px 10px 3px rgba(208, 216, 243, 0.4)'\n  }\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getTasksTC(card._id))\n  },[dispatch, card])\n\n  // Memoizing function for calculating progress\n  const countTaskProgress = useMemo(() => {\n    const doneCount = tasks.reduce((acc, task) => acc + Number(task.checked), 0)\n    return Math.ceil(100 / tasks.length * doneCount)\n  },[tasks])\n\n  // take cardId in current component and use callback\n  const changeFilterHandler = useCallback((filterValue: CardFilterValuesType) => {\n    changeFilter(filterValue, card._id)\n  }, [changeFilter, card])\n\n  const removeTaskHandler = useCallback((taskId: string) => {\n    removeTask(taskId, card._id)\n  }, [removeTask, card])\n\n  const changeTaskStatusHandler = useCallback((taskId: string, taskIsChecked: boolean) => {\n    changeTaskStatus(taskId, taskIsChecked, card._id)\n  }, [changeTaskStatus, card])\n\n  const addTaskHandler = useCallback((taskTitle: string) => {\n    addTask(taskTitle, card._id)\n  }, [addTask, card])\n\n  const changeTaskTitleHandler = useCallback((taskId: string, title: string) => {\n    changeTaskTitle(taskId, title, card._id)\n  }, [changeTaskTitle, card])\n\n  const removeCardHandler = useCallback(() => {\n    removeCard(card._id)\n  }, [removeCard, card])\n\n  const changeCardTitleHandler = useCallback((newCardTitle: string) => {\n    changeCardTitle(card._id, newCardTitle)\n  }, [changeCardTitle, card])\n\n  // filter logic\n  let tasksForCard = tasks\n  if (card.filter === 'DONE') tasksForCard = tasks.filter(task => task.checked)\n  if (card.filter === 'ACTIVE') tasksForCard = tasks.filter(task => !task.checked)\n\n  return (\n    <div>\n      <Card style={cardStyles}>\n        <CardHeader\n          cardTitle={card.title}\n          taskCount={tasks.length}\n          removeCard={removeCardHandler}\n          changeCardTitle={changeCardTitleHandler}\n        />\n        <CardProgressBar progress={countTaskProgress}/>\n        <Divider/>\n        {tasksForCard.map(task => <Task\n                                    key={task._id}\n                                    id={task._id}\n                                    title={task.title}\n                                    isChecked={task.checked}\n                                    changeTaskTitle={changeTaskTitleHandler}\n                                    changeTaskStatus={changeTaskStatusHandler}\n                                    removeTask={removeTaskHandler}\n                                  />\n        )}\n        <AddItem addItem={addTaskHandler} type={'task'}/>\n        <Divider/>\n        <FilterTasks changeFilter={changeFilterHandler} filter={card.filter}/>\n      </Card>\n    </div>\n  )\n})","import React, {CSSProperties, useCallback, useEffect} from 'react'\nimport {DEV_VERSION} from '../config'\nimport {CardTasks} from './cardTasks/CardTasks'\nimport {Card} from 'antd'\nimport {AddItem} from './common/addItem/AddItem'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {\n  addCardTC,\n  CardFilterValuesType,\n  CardStateType,\n  changeCardFilterAC,\n  changeCardTitleTC,\n  getCardsTC,\n  removeCardTC,\n} from '../bll/cards-reducer'\nimport {\n  addTaskTC,\n  changeTaskStatusTC,\n  changeTaskTitleTC,\n  removeTaskTC,\n  TasksType,\n} from '../bll/tasks-reducer'\nimport {AppStateType} from '../bll/store'\nimport {Redirect} from 'react-router-dom'\nimport './myTasks.css'\n\nexport const MyTasks = React.memo(() => {\n  DEV_VERSION && console.log('MyTasks')\n\n  const addCardBlockStyles: CSSProperties = {\n    width: 300,\n    height: 80,\n    margin: 20,\n    borderRadius: 5,\n    border: 'dashed',\n    borderColor: 'lightgray',\n    opacity: 0.5,\n    borderWidth: 2\n  }\n\n  const cards = useSelector<AppStateType, Array<CardStateType>>(state => state.cards)\n  const tasks = useSelector<AppStateType, TasksType>(state => state.tasks)\n  const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if(isAuth) {\n      dispatch(getCardsTC())\n    }\n  }, [dispatch, isAuth])\n\n  const addCard = useCallback((cardTitle: string) => {\n    dispatch(addCardTC(cardTitle))\n  },[dispatch])\n\n  const changeCardTitle = useCallback((cardId: string, newCardTitle: string) => {\n    dispatch(changeCardTitleTC(cardId, newCardTitle))\n  }, [dispatch])\n\n  const removeCard = useCallback((cardId: string) => {\n    dispatch(removeCardTC(cardId))\n  }, [dispatch])\n\n  const addTask = useCallback((taskTitle: string, cardId: string) => {\n    dispatch(addTaskTC(taskTitle, cardId))\n  },[dispatch])\n\n  const changeTaskStatus = useCallback((taskId: string, taskIsChecked: boolean, cardId: string) => {\n    dispatch(changeTaskStatusTC(taskId, taskIsChecked, cardId))\n  },[dispatch])\n\n  const changeTaskTitle = useCallback((taskId: string, taskTitle: string, cardId: string) => {\n    dispatch(changeTaskTitleTC(taskId, taskTitle, cardId))\n  },[dispatch])\n\n  const removeTask = useCallback((taskId: string, cardId: string) => {\n    dispatch(removeTaskTC(taskId, cardId))\n  },[dispatch])\n\n  const changeFilter = useCallback((filter: CardFilterValuesType, cardId: string) => {\n    dispatch(changeCardFilterAC(filter, cardId))\n  },[dispatch])\n\n  if(!isAuth) {\n    return <Redirect to='/login'/>\n  }\n\n  return (\n    <div className='wrapper-myTasks'>\n      {cards.map(card => {\n        return <CardTasks\n                 key={card._id}\n                 card={card}\n                 removeCard={removeCard}\n                 changeCardTitle={changeCardTitle}\n                 tasks={tasks[card._id]}\n                 changeTaskTitle={changeTaskTitle}\n                 changeTaskStatus={changeTaskStatus}\n                 removeTask={removeTask}\n                 addTask={addTask}\n                 changeFilter={changeFilter}\n               />\n      })}\n      <Card style={addCardBlockStyles}>\n        <AddItem addItem={addCard} type='card'/>\n      </Card>\n    </div>\n  )\n})\n","import {AppReducersType} from './store'\nimport {ACTIONS_AUTH_TYPE} from './auth-reducer'\n\nexport enum ACTIONS_SEARCH_TYPE {\n  SET_SEARCH_CARD_TITLE = 'Search/SET_SEARCH_CARD_TITLE',\n}\n\nexport type SearchStateType = {\n  searchCardTitle: string | undefined\n}\nconst initialState: SearchStateType = {\n  searchCardTitle: undefined\n}\n\nexport const searchReducer = (state: SearchStateType = initialState, action: AppReducersType): SearchStateType => {\n  switch (action.type) {\n\n    case ACTIONS_SEARCH_TYPE.SET_SEARCH_CARD_TITLE:\n      return {...state, searchCardTitle: action.searchCardTitle}\n\n    case ACTIONS_AUTH_TYPE.LOGOUT:\n      return {...state, searchCardTitle: undefined}\n\n    default:\n      return state\n  }\n}\n\n// actions\nexport const setSearchCardTitleAC = (searchCardTitle: string | undefined) => ({\n  type: ACTIONS_SEARCH_TYPE.SET_SEARCH_CARD_TITLE,\n  searchCardTitle\n} as const)\n\n// types\nexport type SetSearchCardTitleACType = ReturnType<typeof setSearchCardTitleAC>\nexport type SearchACType = SetSearchCardTitleACType","import React from 'react'\nimport {Form, Input, Button} from 'antd'\nimport {MailOutlined, LockOutlined} from '@ant-design/icons'\nimport './loginForm.css'\nimport {NavLink, Redirect} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {DEV_VERSION} from '../../config'\nimport {loginTC} from '../../bll/auth-reducer'\nimport {AppStateType} from '../../bll/store'\nimport {setIsRegisterAC} from '../../bll/registration-reducer';\n\nexport type LoginDataType = {\n  email: string\n  password: string\n}\n\nexport const LoginForm = React.memo(() => {\n  DEV_VERSION && console.log('LoginForm')\n\n  const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\n  const dispatch = useDispatch()\n\n  const onFinish = (values: LoginDataType) => {\n    dispatch(loginTC(values))\n    dispatch(setIsRegisterAC(false))\n  }\n\n  if (isAuth) {\n    return <Redirect to={'/'}/>\n  }\n\n  return (\n    <div className='wrapper-loginForm'>\n      <div className='content-loginForm'>\n        <Form\n          name='login'\n          initialValues={{remember: true,}}\n          onFinish={onFinish}\n        >\n          <div className='title-loginForm'>\n            Log in\n          </div>\n          <Form.Item\n            name='email'\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Email!',\n              },\n              {\n                type: 'email',\n                message: 'Please input correct Email!',\n              },\n            ]}\n          >\n            <Input prefix={<MailOutlined className='site-form-item-icon'/>} placeholder='Email'/>\n          </Form.Item>\n\n          <Form.Item\n            name='password'\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Password!',\n              },\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className='site-form-item-icon'/>}\n              type='password'\n              placeholder='Password'\n              autoComplete='on'\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type='primary' htmlType='submit' className='login-form-button'>\n              Log in\n            </Button>\n            Or <NavLink to='/registration'>register now!</NavLink>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n})","import React, {useCallback} from 'react'\nimport {Form, Input, Button,} from 'antd'\nimport './registrationForm.css'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {AppStateType} from '../../bll/store'\nimport {registrationTC} from '../../bll/registration-reducer'\nimport {NavLink} from 'react-router-dom'\nimport {DEV_VERSION} from '../../config'\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n}\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n}\n\nexport type RegistrationDataType = {\n  name?: string\n  email: string\n  password: string\n}\n\nexport const RegistrationForm = React.memo(() => {\n  DEV_VERSION && console.log('RegistrationForm')\n\n  const isRegister = useSelector<AppStateType, boolean>(state => state.registration.isRegister)\n\n  const dispatch = useDispatch()\n\n  const onFinish = useCallback((values: RegistrationDataType) => {\n    dispatch(registrationTC(values))\n  }, [dispatch])\n\n  if (isRegister) {\n    return (\n      <div className='wrapper-registrationForm'>\n        <div className='content-registrationForm content-margin'>\n          Register SUCCESS, now you can log in by the <NavLink to={'/login'}>Log in</NavLink>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className='wrapper-registrationForm'>\n      <div className='content-registrationForm'>\n        <Form\n          {...layout}\n          name='register'\n          className='registration-form'\n          onFinish={onFinish}\n        >\n          <div className='title-registrationForm'>\n            Registration\n          </div>\n          <Form.Item\n            name='name'\n            label='Name'\n          >\n            <Input/>\n          </Form.Item>\n\n          <Form.Item\n            name='email'\n            label='Email'\n            rules={[\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ]}\n          >\n            <Input/>\n          </Form.Item>\n\n          <Form.Item\n            name='password'\n            label='Password'\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                min: 3,\n                message: 'Password should be more than 3 symbols!',\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password autoComplete='on'/>\n          </Form.Item>\n\n          <Form.Item\n            name='confirm'\n            label='Confirm Password'\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                min: 3,\n                message: 'Password should be more than 3 symbols!',\n              },\n\n              ({getFieldValue}) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n\n                  return Promise.reject('The two passwords that you entered do not match!')\n                }\n              })\n            ]}\n          >\n            <Input.Password autoComplete='on'/>\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type='primary' htmlType='submit'>\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n})","import {Button, Result} from 'antd';\nimport React from 'react';\n\nexport const Page404 = React.memo(() => {\n  return (\n    <Result\n      status=\"404\"\n      title=\"404\"\n      subTitle=\"Sorry, the page you visited does not exist.\"\n      extra={<Button type=\"primary\">Back Home</Button>}\n    />\n  )\n})","import React, {ChangeEvent, useCallback, useState} from 'react'\nimport {DEV_VERSION} from '../../config'\nimport {Dropdown, Menu, Input, Avatar} from 'antd'\nimport {LogoutOutlined, ProfileOutlined, UserOutlined} from '@ant-design/icons'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {AppStateType} from '../../bll/store'\nimport {NavLink} from 'react-router-dom'\nimport './HeaderContent.css'\nimport {setSearchCardTitleAC} from '../../bll/search-reducer'\nimport {getCardsTC} from '../../bll/cards-reducer'\n\nconst {Search} = Input\n\n\nexport type HeaderContentType = {\n  logout: () => void\n}\nexport const HeaderContent: React.FC<HeaderContentType> = React.memo((\n  {\n    logout\n  }\n) => {\n  DEV_VERSION && console.log('HeaderContent')\n\n  const userName = useSelector<AppStateType, string | null>(state => state.user.name)\n  const userEmail = useSelector<AppStateType, string>(state => state.user.email)\n  const [searchInput, setSearchInput] = useState<string | undefined>(undefined)\n  const dispatch = useDispatch()\n\n  const onChangeSearchInput = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchInput(e.currentTarget.value)\n  }\n\n  const onSearch = useCallback(() => {\n    dispatch(setSearchCardTitleAC(searchInput))\n    dispatch(getCardsTC())\n  },[dispatch, searchInput])\n\n  const menu = (\n    <Menu onClick={() => {\n    }}>\n      <Menu.Item key=\"1\" icon={<ProfileOutlined/>} onClick={() => {\n      }}>\n        <NavLink to={'/profile'}>Profile</NavLink>\n      </Menu.Item>\n      <Menu.Divider/>\n      <Menu.Item key=\"2\" danger icon={<LogoutOutlined/>} onClick={logout}>\n        Log out\n      </Menu.Item>\n    </Menu>\n  )\n\n  return (\n    <div className='wrapper-headerContent'>\n      <Search\n        placeholder=\"input card title\"\n        onSearch={onSearch}\n        value={searchInput}\n        enterButton\n        className={'search-headerContent'}\n        onChange={onChangeSearchInput}\n      />\n      <Dropdown overlay={menu} trigger={['click']} className='wrapper-dropdown'>\n        <div className='wrapper-dropdown'>\n          <Avatar icon={<UserOutlined/>}/>\n          <a className='dropdown-link' href='!#'>\n            {\n              !userName\n                ? userEmail\n                : userName\n            }\n\n            {/*<div>{userEmail}</div>*/}\n          </a>\n        </div>\n      </Dropdown>\n    </div>\n\n  )\n})","export default __webpack_public_path__ + \"static/media/tasks.187d41f3.png\";","import React from 'react'\nimport {Button, Input, message, Tabs} from 'antd'\nimport {MailOutlined, UserOutlined, LockOutlined} from '@ant-design/icons'\nimport './profile.css'\nimport {DEV_VERSION} from '../../config'\nimport {useSelector} from 'react-redux'\nimport {AppStateType} from '../../bll/store'\nimport {NavLink, Redirect} from 'react-router-dom'\n\n\nconst { TabPane } = Tabs\n\nexport const Profile: React.FC = React.memo(() => {\n  DEV_VERSION && console.log('Profile')\n\n  const userName = useSelector<AppStateType, string | null>(state => state.user.name)\n  const email = useSelector<AppStateType, string>(state => state.user.email)\n  const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\n\n  if(!isAuth) {\n    return <Redirect to='/login'/>\n  }\n\n  return (\n\n      <Tabs defaultActiveKey='1' centered>\n        <TabPane tab='User data' key='1'>\n          <div className='wrapper-user-tab'>\n            <div className='content-user'>\n              <div className='wrapper-item'>\n                <UserOutlined />\n                <div className='user-item'>Name:</div>\n                <Input disabled value={userName !== null ? userName : ''} />\n              </div>\n              <div className='wrapper-item'>\n                <MailOutlined/>\n                <div className='user-item'>Email:</div>\n                <Input disabled value={email} />\n              </div>\n              <Button\n                type='link'\n                className='edit-button'\n                onClick={ () => message.warn('Sorry, Edit flow is not implemented yet...')}\n              >\n                Edit\n              </Button>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Security' key='2'>\n          <div className='security-text'>\n            <LockOutlined className='security-icon'/>\n            Sorry, Security Tab is not implemented yet...\n            <div>You can go to the <NavLink to='/'>Home</NavLink> page</div>\n          </div>\n        </TabPane>\n      </Tabs>\n  )\n})","import React, {CSSProperties, useCallback, useEffect} from 'react'\nimport {Route, Switch, Redirect, NavLink} from 'react-router-dom'\nimport {MyTasks} from './components/MyTasks'\nimport {LoginForm} from './components/login/LoginForm'\nimport {Layout, Spin, message} from 'antd'\nimport {RegistrationForm} from './components/registration/RegistrationForm'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {AppStateType} from './bll/store'\nimport {authMeTC, logoutAC} from './bll/auth-reducer'\nimport {Page404} from './components/common/page404/Page404'\nimport './app.css'\nimport {RequestStatusType, setErrorAC} from './bll/request-reducer'\nimport {HeaderContent} from './components/headerContent/HeaderContent'\nimport {DEV_VERSION} from './config'\nimport taskLogo from './img/tasks.png'\nimport {Profile} from './components/profile/Profile'\n\nconst {Header, Content} = Layout\n\nexport const App = React.memo(() => {\n  DEV_VERSION && console.log('App')\n\n  // additional css styles for Spin ant-design component\n  const spinStyles: CSSProperties = {\n    position: 'fixed',\n    top: '50%',\n    textAlign: 'center',\n    width: '100%',\n    zIndex: 1,\n  }\n\n  const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\n  const isInitialized = useSelector<AppStateType, boolean>(state => state.auth.isInitialized)\n  const requestStatus = useSelector<AppStateType, RequestStatusType>(state => state.request.status)\n  const error = useSelector<AppStateType, string | null>(state => state.request.error)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(authMeTC())\n  }, [dispatch])\n\n  // display Error message if the text of error from server was changed\n  // need to use useEffect so there is no warning log renderer in console\n  useEffect(() => {\n    !!error && message.error(error, undefined, () => dispatch(setErrorAC(null))).then()\n  }, [error, dispatch])\n\n  // without backend logic (only front side)\n  const logout = useCallback(() => {\n    dispatch(logoutAC())\n  }, [dispatch])\n\n  if (!isInitialized) {\n    return <Spin style={spinStyles}/>\n  }\n\n  return (\n    <div>\n      <Layout>\n        <Header className='wrapper-header'>\n          <NavLink className='logo-block' to='/'>\n            <img src={taskLogo} className='img-logo' alt='logo'/>\n            <div>MyTasks</div>\n          </NavLink>\n          {isAuth && <HeaderContent logout={logout}/>}\n        </Header>\n        {requestStatus === 'loading' && <Spin style={spinStyles}/>}\n        <Content>\n          <Switch>\n            <Route exact path={'/'} render={() => <Redirect to={'/cards'}/>}/>\n            <Route path='/cards' render={() => <MyTasks/>}/>\n            <Route path='/login' render={() => <LoginForm/>}/>\n            <Route path='/registration' render={() => <RegistrationForm/>}/>\n            <Route path='/profile' render={() => <Profile/>}/>\n            {/*<Route path='/404' render={() => <Page404/>}/>*/}\n            <Route render={() => <Page404/>}/>\n            {/*<Redirect from='*' to='/404'/>*/}\n          </Switch>\n        </Content>\n\n      </Layout>\n    </div>\n  )\n})\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {DEV_VERSION} from '../config'\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\nimport {createStore, combineReducers, compose, applyMiddleware} from 'redux'\nimport {CardsACType, cardsReducer} from './cards-reducer'\nimport {TasksACType, tasksReducer} from './tasks-reducer'\nimport {RegistrationACType, registrationReducer} from './registration-reducer'\nimport {AuthACType, authReducer} from './auth-reducer'\nimport {UserACType, userReducer} from './user-reducer'\nimport {RequestACType, requestReducer} from './request-reducer'\nimport {Dispatch} from 'react'\nimport {SearchACType, searchReducer} from './search-reducer'\n\nconst reducers = combineReducers({\n  cards: cardsReducer,\n  tasks: tasksReducer,\n  registration: registrationReducer,\n  auth: authReducer,\n  user: userReducer,\n  request: requestReducer,\n  search: searchReducer,\n})\nexport type AppStateType = ReturnType<typeof reducers>\nexport type AppReducersType = UserACType | TasksACType | RequestACType | RegistrationACType | CardsACType | AuthACType | SearchACType\nexport type AppThunksType = ThunkAction<void, AppStateType, Dispatch<AppReducersType> , AppReducersType>\n\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n// @ts-ignore\nwindow.store = store\nif (DEV_VERSION) {\n  // @ts-ignore\n  window.store = store\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {App} from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'antd/dist/antd.css'\nimport { Provider } from 'react-redux'\nimport {store} from './bll/store'\nimport {HashRouter} from 'react-router-dom'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}